{"id":732486873,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1656326368,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/732486873/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"N/A","code":"class Solution {\npublic:\n    \n    int lis(vector<int>&nums,int i,int prev,int n)\n    {\n        if(i>=n)\n            return 0;\n        int take=0,donttake=lis(nums,i+1,prev,n);\n        if(nums[i]>prev)\n            take=1+lis(nums,i+1,nums[i],n);\n        return max(take,donttake);\n    }\n    \n    int lengthOfLIS(vector<int>& nums) {\n        int n=nums.size();\n        return lis(nums,0,INT_MIN,n);   \n    }\n};","compare_result":"111111111111111111111100000000000000000000000000000000","title_slug":"longest-increasing-subsequence","has_notes":false,"flag_type":1}