{"id":1126334147,"lang":"cpp","lang_name":"C++","time":"2 weeks, 1 day","timestamp":1703307857,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1126334147/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"N/A","code":"class Solution {\npublic:\n    int lengthOfLIS(vector<int>& nums) {\n        int n = nums.size();\n        vector<int>dp(n,1);\n        for(int i=n-2;i>=0;i--)\n        {\n            for(int j=i+1;j<n;j++)\n            {\n                if(nums[j]>nums[i])\n                {\n                    dp[i]=max(dp[i],1+dp[j]);\n                }\n                else\n                    dp[i]=max(dp[i],dp[j]);\n            }\n        }\n        return dp[0];\n    }\n};","compare_result":"1111111111111010010011111010001010000000000000000000001","title_slug":"longest-increasing-subsequence","has_notes":false,"flag_type":1}