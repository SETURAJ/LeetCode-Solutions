{"id":769931970,"lang":"cpp","lang_name":"C++","time":"1 year, 5 months","timestamp":1660107854,"status":10,"status_display":"Accepted","runtime":"520 ms","url":"/submissions/detail/769931970/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"10.5 MB","code":"class Solution {\npublic:\n    int lengthOfLIS(vector<int>& nums) {\n        if(!nums.size())\n            return 0;\n        int n=nums.size();\n        vector<int>dp(nums.size(),1);\n        for(int i=0;i<n;i++)\n        {\n            for(int j=0;j<i;j++)\n            {\n                if(nums[i]>nums[j] && 1+dp[j] > dp[i])\n                    dp[i]=1+dp[j];\n            }\n        }\n        return *max_element(dp.begin(),dp.end());\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence","has_notes":false,"flag_type":1}