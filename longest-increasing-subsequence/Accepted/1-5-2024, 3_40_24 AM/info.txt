{"id":1137445675,"lang":"cpp","lang_name":"C++","time":"2 days, 9 hours","timestamp":1704444024,"status":10,"status_display":"Accepted","runtime":"250 ms","url":"/submissions/detail/1137445675/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"10.9 MB","code":"class Solution {\npublic:\n    int lengthOfLIS(vector<int>& nums) {\n        int n = nums.size();\n        vector<int>dp(n,1);\n        for(int i=n-2;i>=0;i--)\n        {\n            for(int j=i+1;j<n;j++)\n            {\n                if(nums[j]>nums[i])\n                    dp[i]=max(dp[i],1+dp[j]);\n            }\n        }\n        int res = INT_MIN;\n        for(int i=0;i<n;i++)\n            res = max(res,dp[i]);\n        return res;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence","has_notes":false,"flag_type":1}