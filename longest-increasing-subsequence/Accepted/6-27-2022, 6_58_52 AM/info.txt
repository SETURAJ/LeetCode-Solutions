{"id":732497476,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1656327532,"status":10,"status_display":"Accepted","runtime":"1101 ms","url":"/submissions/detail/732497476/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"10.8 MB","code":"class Solution {\npublic:\n    \n    int lis(vector<int>&nums,int i,int prev,int n,vector<int>&dp)\n    {\n        if(i>=n)\n            return 0;\n       if(dp[prev+1]!=-1)\n           return dp[prev+1];\n        int take=0,donttake=lis(nums,i+1,prev,n,dp);\n        if(prev==-1 || nums[i]>nums[prev])\n            take=1+lis(nums,i+1,i,n,dp);\n        return dp[prev+1]=max(take,donttake);\n    }\n    \n    int lengthOfLIS(vector<int>& nums) {\n        int n=nums.size();\n        vector<int>dp(n,-1);\n        return lis(nums,0,-1,n,dp);   \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence","has_notes":false,"flag_type":1}