{"id":705293174,"lang":"cpp","lang_name":"C++","time":"1 year, 7 months","timestamp":1653288105,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/705293174/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal II","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> levelOrderBottom(TreeNode* root) {\n        queue<TreeNode*>q;\n        vector<vector<int>>res;\n        q.push(root);\n        while(!q.empty())\n        {\n            int qlen=q.size();\n            vector<int>v;\n            for(int i=0;i<qlen;i++)\n            {\n                TreeNode* node=q.front();\n                q.pop();\n                v.push_back(node->val);\n                if(node->left)\n                    q.push(node->left);\n                if(node->right)\n                    q.push(node->right);\n            }\n            res.push_back(v);\n        }\n        reverse(res.begin(),res.end());\n        return res;\n    }\n};","compare_result":"1100000000000000000000000000000000","title_slug":"binary-tree-level-order-traversal-ii","has_notes":false,"flag_type":1}