{"id":661026836,"lang":"cpp","lang_name":"C++","time":"1 year, 9 months","timestamp":1647413867,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/661026836/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"20.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    int height(TreeNode* root,int &ans)\n    {\n        if(root==NULL)\n            return 0;\n        int lheight=height(root->left,ans);\n        int rheight=height(root->right,ans);\n        ans=max(lheight+rheight,ans);\n        return 1+max(lheight,rheight);\n    }\n    \n    int diameterOfBinaryTree(TreeNode* root) {\n        if(root==NULL)\n            return 0;\n        int ans=INT_MIN;\n        height(root,ans);\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree","has_notes":false,"flag_type":1}