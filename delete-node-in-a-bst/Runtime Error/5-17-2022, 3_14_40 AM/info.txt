{"id":701254398,"lang":"cpp","lang_name":"C++","time":"1 year, 7 months","timestamp":1652771680,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/701254398/","is_pending":"Not Pending","title":"Delete Node in a BST","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    TreeNode* find_succ(TreeNode* root)\n    {\n        TreeNode* curr=root;\n        while(curr && curr->left!=NULL)\n            curr=curr->left;\n        return curr;\n    }\n    \n    TreeNode* deleteNode(TreeNode* root, int key) {\n        if(root==NULL)\n            return NULL;\n        if(key>root->val)\n            root->right=deleteNode(root->right,key);\n        else if(key<root->val)\n            root->left=deleteNode(root->left,key);\n        else\n        {\n            if(root->left==NULL && root->right==NULL)\n                return NULL;\n            else if(root->left==NULL)\n            {\n                TreeNode* temp=root->right;\n                free(root);\n                return temp;\n            }\n            else if(root->right==NULL)\n            {\n                TreeNode* temp=root->left;\n                free(root);\n                return temp;\n            }\n            TreeNode* temp=find_succ(root->right);\n            root->val=temp->val;\n            root->right=deleteNode(root->right,temp->val);\n        }\n        return root;\n    }\n};","compare_result":"1111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"delete-node-in-a-bst","has_notes":false,"flag_type":1}