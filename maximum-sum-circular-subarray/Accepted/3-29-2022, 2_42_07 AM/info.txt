{"id":669500890,"lang":"cpp","lang_name":"C++","time":"1 year, 9 months","timestamp":1648536127,"status":10,"status_display":"Accepted","runtime":"89 ms","url":"/submissions/detail/669500890/","is_pending":"Not Pending","title":"Maximum Sum Circular Subarray","memory":"39.9 MB","code":"class Solution {\npublic:\n    int maxSubarraySumCircular(vector<int>& nums) {\n        int max_sum = nums[0], min_sum = nums[0], sum = nums[0], prev_min = nums[0], prev_max = nums[0];\n        \n        for (int i = 1; i < nums.size(); i++) {\n            sum += nums[i];\n            \n            prev_max = max(prev_max + nums[i], nums[i]);\n            max_sum = max(max_sum, prev_max);\n            \n            prev_min = min(prev_min + nums[i], nums[i]);\n            min_sum = min(min_sum, prev_min);\n        }\n        \n        return sum == min_sum ? max_sum : max(max_sum, sum-min_sum);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-sum-circular-subarray","has_notes":false,"flag_type":1}