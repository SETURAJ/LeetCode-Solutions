{"id":880662058,"lang":"cpp","lang_name":"C++","time":"11 months, 3 weeks","timestamp":1674060537,"status":10,"status_display":"Accepted","runtime":"54 ms","url":"/submissions/detail/880662058/","is_pending":"Not Pending","title":"Maximum Sum Circular Subarray","memory":"40 MB","code":"class Solution {\npublic:\n    int maxSubarraySumCircular(vector<int>& nums) {\n        int n=nums.size();\n        int total_sum=0;\n        int max_sum=INT_MIN;\n        for(int i=0;i<n;i++)\n            total_sum+=nums[i];\n        int min_sum=INT_MAX;\n        int min_end=INT_MAX;\n        int sum1=0;\n        for(int i=0;i<n;i++)\n        {\n            sum1+=nums[i];\n            max_sum=max(max_sum,sum1);\n            if(sum1<0)\n                sum1=0;\n            if(min_end>0)\n                min_end=nums[i];\n            else\n                min_end+=nums[i];\n            min_sum=min(min_sum,min_end);\n        }\n        return (total_sum==min_sum)?max_sum:max(max_sum,total_sum-min_sum);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-sum-circular-subarray","has_notes":false,"flag_type":1}