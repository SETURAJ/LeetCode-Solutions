{"id":681966481,"lang":"cpp","lang_name":"C++","time":"1 year, 8 months","timestamp":1650173756,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/681966481/","is_pending":"Not Pending","title":"Increasing Order Search Tree","memory":"7.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode *ret=NULL;\n    TreeNode* pre=NULL;\n    \n    TreeNode* increasingBST(TreeNode* root) {\n        solve(root);\n        return ret;\n    }\n    void solve(TreeNode* root)\n    {\n        if(root==NULL)\n            return ;\n        solve(root->left);\n        if(pre)\n            pre->right=root;\n        else\n            ret=root;\n        root->left=NULL;\n        pre=root;\n        solve(root->right);\n    }\n    \n    \n};","compare_result":"1111111111111111111111111111111111111","title_slug":"increasing-order-search-tree","has_notes":false,"flag_type":1}