{"id":750049648,"lang":"cpp","lang_name":"C++","time":"1 year, 5 months","timestamp":1658128726,"status":10,"status_display":"Accepted","runtime":"2088 ms","url":"/submissions/detail/750049648/","is_pending":"Not Pending","title":"Number of Submatrices That Sum to Target","memory":"9 MB","code":"class Solution {\npublic:\n    int numSubmatrixSumTarget(vector<vector<int>>& A, int target) {\n        int res = 0, m = size(A), n = size(A[0]);\n\t// calculating prefix sum for each row of matrix\n\tfor (int row = 0; row < m; row++)\n\t\tfor (int col = 1; col < n; col++)\n\t\t\tA[row][col] += A[row][col - 1];\n\t// calculate sum of each submatrix and check if it is equal to target\n\tfor (int colStart = 0; colStart < n; colStart++) {\n\t\tfor (int colEnd = colStart; colEnd < n; colEnd++) {\n\t\t\tfor(int rowStart = 0; rowStart < m; rowStart++){\n\t\t\t\tint sum = 0;\n\t\t\t\tfor(int rowEnd = rowStart; rowEnd < m; rowEnd++){\n\t\t\t\t\tsum += A[rowEnd][colEnd] - (colStart ? A[rowEnd][colStart - 1] : 0);\n\t\t\t\t\tif(sum == target) res++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn res;    \n    }\n};","compare_result":"1111111111111111111111111111111111111111","title_slug":"number-of-submatrices-that-sum-to-target","has_notes":false,"flag_type":1}