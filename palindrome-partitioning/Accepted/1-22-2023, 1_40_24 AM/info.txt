{"id":882914145,"lang":"cpp","lang_name":"C++","time":"11 months, 2 weeks","timestamp":1674369624,"status":10,"status_display":"Accepted","runtime":"172 ms","url":"/submissions/detail/882914145/","is_pending":"Not Pending","title":"Palindrome Partitioning","memory":"57.7 MB","code":"class Solution {\npublic:\n    \n    void findpart(int index,string s,vector<string>&path,vector<vector<string>>&res)\n    {\n        if(index==s.size())\n        {\n            res.push_back(path);\n            return;\n        }\n        for(int i=index;i<s.size();++i)\n        {\n            if(isPal(s,index,i))\n            {\n                path.push_back(s.substr(index,i-index+1));\n                findpart(i+1,s,path,res);\n                path.pop_back();\n            }\n        }\n    }\n    bool isPal(string s,int start,int end)\n    {\n        while(start<=end)\n        {\n            if(s[start++]!=s[end--])\n                return false;\n        }\n        return true;\n    }\n    \n    vector<vector<string>> partition(string s) {\n        vector<vector<string>>res;\n        vector<string>path;\n        findpart(0,s,path,res);\n        return res;\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"palindrome-partitioning","has_notes":false,"flag_type":1}