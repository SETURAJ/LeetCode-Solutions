{"id":702598578,"lang":"cpp","lang_name":"C++","time":"1 year, 7 months","timestamp":1652942121,"status":10,"status_display":"Accepted","runtime":"19 ms","url":"/submissions/detail/702598578/","is_pending":"Not Pending","title":"Subtree of Another Tree","memory":"28.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    bool isSame(TreeNode* root, TreeNode* subRoot)\n    {\n        if(root==NULL && subRoot==NULL)\n            return true;\n        if(!root || !subRoot)\n            return false;\n        if(root->val !=subRoot->val)\n            return false;\n        return isSame(root->left,subRoot->left) && isSame(root->right,subRoot->right);\n    }\n    \n    bool isSubtree(TreeNode* root, TreeNode* subRoot) {\n        if(root==NULL)\n            return false;\n        if(isSame(root,subRoot))\n            return true;\n        return isSubtree(root->left,subRoot) || isSubtree(root->right,subRoot);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"subtree-of-another-tree","has_notes":false,"flag_type":1}