{"id":805975419,"lang":"cpp","lang_name":"C++","time":"1 year, 3 months","timestamp":1663838831,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/805975419/","is_pending":"Not Pending","title":"Longest Increasing Subsequence II","memory":"N/A","code":"class Solution {\npublic:\n    int lengthOfLIS(vector<int>& nums, int k) {\n        if(!nums.size())\n            return 0;\n        int n=nums.size();\n        vector<int>dp(nums.size(),1);\n        for(int i=0;i<n;i++)\n        {\n            for(int j=0;j<i;j++)\n            {\n                if(nums[i]>nums[j] && nums[i]-nums[j]<=k && 1+dp[j]>dp[i])\n                    dp[i]=1+dp[j];\n            }\n        }\n        return *max_element(dp.begin(),dp.end());\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111000000000000","title_slug":"longest-increasing-subsequence-ii","has_notes":false,"flag_type":1}