{"id":698523807,"lang":"cpp","lang_name":"C++","time":"1 year, 7 months","timestamp":1652420944,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/698523807/","is_pending":"Not Pending","title":"Populating Next Right Pointers in Each Node II","memory":"N/A","code":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    Node* left;\n    Node* right;\n    Node* next;\n\n    Node() : val(0), left(NULL), right(NULL), next(NULL) {}\n\n    Node(int _val) : val(_val), left(NULL), right(NULL), next(NULL) {}\n\n    Node(int _val, Node* _left, Node* _right, Node* _next)\n        : val(_val), left(_left), right(_right), next(_next) {}\n};\n*/\n\nclass Solution {\npublic:\n    \n    Node* find(Node* root)\n    {\n        if(root==NULL)\n            return NULL;\n        if(root->left)  \n            return root->left;\n        if(root->right)\n            return root->right;\n        //return find(root->next);\n        return NULL;\n    }\n    \n    Node* connect(Node* root) {\n        if(root==NULL)\n            return NULL;\n        if(root->left)\n        {\n            if(root->right)\n                root->left->next=root->right;\n            else\n                root->left->next=find(root->next);\n        }\n        if(root->right)\n            root->right->next=find(root->next);\n        \n        connect(root->right);\n        connect(root->left);\n        \n        return root;\n        \n    }\n};","compare_result":"1111111111111111100111111111111011001110000000000000000","title_slug":"populating-next-right-pointers-in-each-node-ii","has_notes":false,"flag_type":1}