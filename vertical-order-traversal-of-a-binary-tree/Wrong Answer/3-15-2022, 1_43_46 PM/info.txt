{"id":660641404,"lang":"cpp","lang_name":"C++","time":"1 year, 9 months","timestamp":1647366226,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/660641404/","is_pending":"Not Pending","title":"Vertical Order Traversal of a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> verticalTraversal(TreeNode* root) {\n        vector<vector<int>>res;\n            if(root==NULL)\n                return res;\n        queue<pair<TreeNode *,int>>q;\n        map<int,vector<int>>m;\n        q.push({root,0});\n        while(!q.empty())\n        {\n            TreeNode *temp=q.front().first;\n            int h=q.front().second;\n            q.pop();\n            m[h].push_back(temp->val);\n            if(temp->left)\n                q.push({temp->left,h-1});\n            if(temp->right)\n                q.push({temp->right,h+1});\n        }\n        for(auto x:m)\n            res.push_back(x.second);\n        return res;\n    }\n};","compare_result":"11011111111111011010000000000000","title_slug":"vertical-order-traversal-of-a-binary-tree","has_notes":false,"flag_type":1}