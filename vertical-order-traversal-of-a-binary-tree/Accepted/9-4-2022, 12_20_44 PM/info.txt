{"id":791426487,"lang":"cpp","lang_name":"C++","time":"1 year, 4 months","timestamp":1662308444,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/791426487/","is_pending":"Not Pending","title":"Vertical Order Traversal of a Binary Tree","memory":"13.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> verticalTraversal(TreeNode* root) {\n        vector<vector<int>>ans;\n            if(root==NULL)\n                return ans;\n         map < int, map < int, multiset < int >>> nodes;\n  queue < pair < TreeNode * , pair < int, int >>> todo;\n  todo.push({\n    root,\n    {\n      0,\n      0\n    }\n  }); //initial vertical and level\n  while (!todo.empty()) {\n    auto p = todo.front();\n    todo.pop();\n    TreeNode * temp = p.first;\n\n    //x -> vertical , y->level\n    int x = p.second.first, y = p.second.second;\n    nodes[x][y].insert(temp -> val); //inserting to multiset\n\n    if (temp -> left) {\n      todo.push({\n        temp -> left,\n        {\n          x - 1,\n          y + 1\n        }\n      });\n    }\n    if (temp -> right) {\n      todo.push({\n        temp -> right,\n        {\n          x + 1,\n          y + 1\n        }\n      });\n    }\n  }\n \n  for (auto p: nodes) {\n    vector < int > col;\n    for (auto q: p.second) {\n      col.insert(col.end(), q.second.begin(), q.second.end());\n    }\n    ans.push_back(col);\n  }\n  return ans;\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"vertical-order-traversal-of-a-binary-tree","has_notes":false,"flag_type":1}