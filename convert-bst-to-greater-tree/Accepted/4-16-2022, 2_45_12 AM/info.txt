{"id":681295809,"lang":"cpp","lang_name":"C++","time":"1 year, 8 months","timestamp":1650091512,"status":10,"status_display":"Accepted","runtime":"27 ms","url":"/submissions/detail/681295809/","is_pending":"Not Pending","title":"Convert BST to Greater Tree","memory":"33.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\nprivate:\n    int cur_sum = 0;\npublic:\n    void travel(TreeNode* root){\n        if (!root) return;\n        if (root->right) travel(root->right);\n        \n        root->val = (cur_sum += root->val);\n        if (root->left) travel(root->left);\n    }\n    TreeNode* convertBST(TreeNode* root) {\n        travel(root);\n        return root;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"convert-bst-to-greater-tree","has_notes":false,"flag_type":1}