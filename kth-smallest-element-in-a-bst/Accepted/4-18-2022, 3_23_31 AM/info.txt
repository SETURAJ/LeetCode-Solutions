{"id":682658844,"lang":"cpp","lang_name":"C++","time":"1 year, 8 months","timestamp":1650266611,"status":10,"status_display":"Accepted","runtime":"25 ms","url":"/submissions/detail/682658844/","is_pending":"Not Pending","title":"Kth Smallest Element in a BST","memory":"24.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int ans;\n    void recurse(TreeNode* root,int &ans,int &k)\n    {\n        if(root==NULL)\n            return;\n        recurse(root->left,ans,k);\n        if(k==0)\n            return ;\n        ans=root->val;\n        recurse(root->right,ans,--k);\n    }\n    \n    int kthSmallest(TreeNode* root, int k) {\n        int ans;\n        recurse(root,ans,k);\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"kth-smallest-element-in-a-bst","has_notes":false,"flag_type":1}