{"id":682654770,"lang":"cpp","lang_name":"C++","time":"1 year, 8 months","timestamp":1650266056,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/682654770/","is_pending":"Not Pending","title":"Kth Smallest Element in a BST","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int ans;\n    void recurse(TreeNode* root,int ans)\n    {\n        if(root==NULL )\n            return;\n        recurse(root->left,ans);\n        ans--;\n        if(ans==0)\n        {\n            ans=root->val;\n        }\n        recurse(root->right,ans);\n    }\n    \n    int kthSmallest(TreeNode* root, int k) {\n        ans=k;\n        recurse(root,ans);\n        return ans;\n    }\n};","compare_result":"111111111100111111111111111111111111111110000000000000000000000000000000000000000000000000000","title_slug":"kth-smallest-element-in-a-bst","has_notes":false,"flag_type":1}