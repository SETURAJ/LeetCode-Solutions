{"id":1090095942,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1698951921,"status":10,"status_display":"Accepted","runtime":"29 ms","url":"/submissions/detail/1090095942/","is_pending":"Not Pending","title":"Is Graph Bipartite?","memory":"16.6 MB","code":"class Solution {\npublic:\n    bool isBipartite(vector<vector<int>>& graph) {\n        int n = graph.size();\n        vector<int> adj[n];\n        for(int i=0;i<n;i++)\n        {\n            for(auto x:graph[i])\n                adj[i].push_back(x);\n        }\n        \n        vector<int> color(n,-1);\n        \n        for(int i=0;i<n;i++)\n        {\n            if(color[i]==-1)\n            {\n                queue<pair<int,int>>q;\n                q.push({i,0});\n                \n                color[i]=0;\n                while(!q.empty())\n                {\n                    pair<int,int> p = q.front();\n                    int a = p.first;\n                    int c = p.second;\n                    q.pop();\n                    for(auto x: adj[a])\n                    {\n                        if(color[x]==c)\n                            return false;\n                        else if(color[x]==-1)\n                        {\n                            if(c==0)\n                                color[x]=1;\n                            else\n                                color[x]=0;\n                            q.push({x,color[x]});\n                        }\n                    }\n                }\n            }\n        }\n        return true;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"is-graph-bipartite","has_notes":false,"flag_type":1}