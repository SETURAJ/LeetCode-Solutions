{"id":701926942,"lang":"cpp","lang_name":"C++","time":"1 year, 7 months","timestamp":1652855763,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/701926942/","is_pending":"Not Pending","title":"All Elements in Two Binary Search Trees","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int>res;\n    \n    void inorder(TreeNode* root1,TreeNode* root2)\n    {\n        if(root1==NULL && root2==NULL)\n            return ;\n        if(root1!=NULL && root2!=NULL)\n        {\n            inorder(root1->left,root2->left);\n            \n            if(root1->val>root2->val)\n            {\n                res.push_back(root2->val);\n                res.push_back(root1->val);\n            }\n            else\n            {\n                res.push_back(root1->val);\n                res.push_back(root2->val);\n            }\n            \n            inorder(root1->right,root2->right);\n        }\n        else if(root1==NULL)\n        {\n            inorder(root1,root2->left);\n            res.push_back(root2->val);\n            inorder(root1,root2->right);\n        }\n        else if(root2==NULL)\n        {\n            inorder(root1->left,root2);\n            res.push_back(root1->val);\n            inorder(root1->right,root2);\n        }\n    }\n    \n    vector<int> getAllElements(TreeNode* root1, TreeNode* root2) {\n        inorder(root1,root2);\n        return res;\n    }\n};","compare_result":"110110000000000000000000000000000000000000000000","title_slug":"all-elements-in-two-binary-search-trees","has_notes":false,"flag_type":1}