{"id":767177722,"lang":"cpp","lang_name":"C++","time":"1 year, 5 months","timestamp":1659841561,"status":10,"status_display":"Accepted","runtime":"79 ms","url":"/submissions/detail/767177722/","is_pending":"Not Pending","title":"Longest Ideal Subsequence","memory":"11.1 MB","code":"class Solution\n{\npublic:\n    \n    void find(string s,int n,int k,vector<int>&dp)\n    {\n        for (int i = 0; i < n; i++)\n        {\n            int b = s[i] - 'a', \n            trace = dp[b];\n            for (int ch= 0; ch< 26; ch++)\n            {\n                if (abs(ch - b) <= k)\n                {\n                    trace = max(trace, dp[ch] + 1);\n                }\n            }\n            dp[b] = trace;\n        }\n    }\n    \n    int longestIdealString(string s, int k)\n    {\n        int n = s.size();\n        vector<int>dp(26);\n        find(s,n,k,dp);\n        \n        return *max_element(begin(dp), end(dp));\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-ideal-subsequence","has_notes":false,"flag_type":1}