{"id":912584592,"lang":"cpp","lang_name":"C++","time":"10Â months","timestamp":1678438414,"status":10,"status_display":"Accepted","runtime":"27 ms","url":"/submissions/detail/912584592/","is_pending":"Not Pending","title":"Linked List Random Node","memory":"16.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* head;\n    Solution(ListNode* head) {\n        this->head=head;\n    }\n    \n    int getRandom() {\n        int count=0;\n        int result=0;\n        ListNode* curr=head;\n        while(curr)\n        {\n            count++;\n            if(rand()%count==0)\n            {\n                result=curr->val;\n            }\n            curr=curr->next;\n        }\n        return result;\n    }\n};\n\n/**\n * Your Solution object will be instantiated and called as such:\n * Solution* obj = new Solution(head);\n * int param_1 = obj->getRandom();\n */","compare_result":"11111111","title_slug":"linked-list-random-node","has_notes":false,"flag_type":1}