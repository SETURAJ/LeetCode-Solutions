{"id":661036756,"lang":"cpp","lang_name":"C++","time":"1 year, 9 months","timestamp":1647415102,"status":10,"status_display":"Accepted","runtime":"19 ms","url":"/submissions/detail/661036756/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"14.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        if(root==NULL || root==p || root==q)\n            return root;\n        TreeNode* left=lowestCommonAncestor(root->left,p,q);\n        TreeNode* right=lowestCommonAncestor(root->right,p,q);\n        if(left==NULL)\n            return right;\n        else if(right==NULL)\n            return left;\n        else\n            return root;\n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree","has_notes":false,"flag_type":1}