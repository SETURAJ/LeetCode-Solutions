{"id":700576804,"lang":"cpp","lang_name":"C++","time":"1 year, 7 months","timestamp":1652690146,"status":10,"status_display":"Accepted","runtime":"33 ms","url":"/submissions/detail/700576804/","is_pending":"Not Pending","title":"Find Mode in Binary Search Tree","memory":"24 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxcount=INT_MIN,curr=0;\n    vector<int>res;\n    TreeNode* prev=NULL;\n    \n    void traverseBST(TreeNode* node,bool flag)\n    {\n        if(node==NULL)\n            return;\n        traverseBST(node->left,flag);\n        if(prev && prev->val == node->val)\n            curr++;\n        else\n            curr=1;\n        if(!flag)\n            maxcount=max(maxcount,curr);\n        else if(maxcount==curr)\n            res.push_back(node->val);\n        prev=node;\n        traverseBST(node->right,flag);\n    }\n    \n    vector<int> findMode(TreeNode* root) {\n        if(!root)\n            return res;\n        traverseBST(root,false);\n        prev=NULL;\n        curr=0;\n        traverseBST(root,true);\n        return res;\n        \n    }\n};","compare_result":"11111111111111111111111","title_slug":"find-mode-in-binary-search-tree","has_notes":false,"flag_type":1}