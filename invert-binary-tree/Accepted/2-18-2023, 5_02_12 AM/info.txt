{"id":900243859,"lang":"cpp","lang_name":"C++","time":"10 months, 3 weeks","timestamp":1676714532,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/900243859/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"9.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    \n    TreeNode* invert(TreeNode* root)\n    {\n        if(root==NULL)\n            return NULL;\n        TreeNode* temp=root->left;\n        root->left=root->right;\n        root->right=temp;\n        if(root->left)\n            invert(root->left);\n        if(root->right)\n            invert(root->right);\n        return root;\n    }\n    \npublic:\n    TreeNode* invertTree(TreeNode* root) {\n        if(root==NULL)\n            return NULL;\n        return invert(root);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree","has_notes":false,"flag_type":1}