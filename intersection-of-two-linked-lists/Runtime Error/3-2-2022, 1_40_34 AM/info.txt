{"id":651753420,"lang":"cpp","lang_name":"C++","time":"1 year, 10 months","timestamp":1646203234,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/651753420/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n   \n    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {\n        ListNode* temp1=headA;\n        ListNode* temp2=headB;\n        stack<ListNode*>s1,s2;\n        while(temp1!=NULL)\n        {\n            s1.push(temp1);\n            temp1=temp1->next;\n        }\n        while(temp2!=NULL)\n        {\n            s2.push(temp2);\n            temp2=temp2->next;\n        }\n        ListNode* prev,*a,*b;\n        while(!s1.empty() && !s2.empty())\n        {\n            a=s1.top();\n            s1.pop();\n            b=s2.top();\n            s2.pop();\n            if(a==b)\n                prev=a;\n            else\n                return prev;\n        }\n        return prev;\n        \n    }\n};","compare_result":"110000000000000000000000000000000000000","title_slug":"intersection-of-two-linked-lists","has_notes":false,"flag_type":1}