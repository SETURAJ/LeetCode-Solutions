{"id":599459885,"lang":"cpp","lang_name":"C++","time":"2Â years","timestamp":1639073841,"status":10,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/599459885/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"15.5 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n   \n    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {\n        ListNode *temp1=headA;\n        ListNode *temp2=headB;\n        stack<ListNode*>s1,s2;\n        while(temp1!=NULL)\n        {\n            s1.push(temp1);\n            temp1=temp1->next;\n        }\n        while(temp2!=NULL)\n        {\n            s2.push(temp2);\n            temp2=temp2->next;\n        }\n        if(temp1!=temp2)\n            return NULL;\n        ListNode *prev=NULL,*a,*b;\n        while(!s1.empty() && !s2.empty())\n        {\n            a=s1.top();\n            s1.pop();\n            b=s2.top();\n            s2.pop();\n            if(a==b)\n                prev=a;\n            else\n                return prev;\n        }\n        return prev;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"intersection-of-two-linked-lists","has_notes":false,"flag_type":1}