{"id":1128465270,"lang":"cpp","lang_name":"C++","time":"1 week, 5 days","timestamp":1703547191,"status":10,"status_display":"Accepted","runtime":"166 ms","url":"/submissions/detail/1128465270/","is_pending":"Not Pending","title":"Best Time to Buy and Sell Stock with Transaction Fee","memory":"91.1 MB","code":"class Solution {\npublic:\n    /*\n    int findprofit(vector<int>&prices,int ind,int buy,int fee , int n)\n    {\n        if(ind==n)\n            return 0;\n        if(buy==1)\n            return max(-prices[ind]+findprofit(prices,ind+1,0,fee,n) , findprofit(prices,ind+1,1,fee,n));\n        return max(prices[ind]-fee+findprofit(prices,ind+1,1,fee,n) , findprofit(prices,ind+1,0,fee,n));\n    }\n    */\n    /*\n    int findprofit(vector<int>&prices,int ind,int buy,int fee , int n,vector<vector<int>>&dp)\n    {\n        if(ind==n)\n            return 0;\n        if(dp[ind][buy]!=-1)\n            return dp[ind][buy];\n        if(buy==1)\n            return dp[ind][buy]= max(-prices[ind]+findprofit(prices,ind+1,0,fee,n,dp) , findprofit(prices,ind+1,1,fee,n,dp));\n        return dp[ind][buy] = max(prices[ind]-fee+findprofit(prices,ind+1,1,fee,n,dp) , findprofit(prices,ind+1,0,fee,n,dp));\n    }\n    */\n    int maxProfit(vector<int>& prices, int fee) {\n        int n = prices.size();\n        vector<vector<int>>dp(n+1,vector<int>(2,0));\n        for(int ind=n-1;ind>=0;ind--)\n        {\n            for(int buy=0;buy<=1;buy++)\n            {\n                if(buy==1)\n                    dp[ind][buy] = max(-prices[ind] + dp[ind+1][0] , dp[ind+1][1]);\n                else\n                    dp[ind][buy] = max(prices[ind]-fee + dp[ind+1][1] , dp[ind+1][0]);\n            }\n        }\n        return dp[0][1];\n        //return findprofit(prices,0,1,fee,n,dp);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111","title_slug":"best-time-to-buy-and-sell-stock-with-transaction-fee","has_notes":false,"flag_type":1}