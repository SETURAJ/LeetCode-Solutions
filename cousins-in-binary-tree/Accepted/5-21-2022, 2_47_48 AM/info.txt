{"id":703883359,"lang":"cpp","lang_name":"C++","time":"1 year, 7 months","timestamp":1653115668,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/703883359/","is_pending":"Not Pending","title":"Cousins in Binary Tree","memory":"10.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isCousins(TreeNode* root, int x, int y) {\n        if(root->val ==x || root->val ==y)\n            return false;\n        queue<TreeNode *>q;\n        q.push(root);\n        while(!q.empty())\n        {\n            int len=q.size();\n            bool foundX=false;\n            bool foundY=false;\n            for(int i=0;i<len;i++)\n            {\n                TreeNode* node=q.front();\n                q.pop();\n                if(node->val ==x)\n                    foundX=true;\n                if(node->val == y)\n                    foundY=true;\n                if(node->left && node->right)\n                {\n                    if((node->left->val == x && node->right->val ==y) || \n                      (node->left->val == y)&& (node->right->val==x))\n                        return false;\n                }\n                if(node->left)\n                    q.push(node->left);\n                if(node->right)\n                    q.push(node->right);\n            }\n            if(foundX && foundY)\n                return true;\n        }\n        return false;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"cousins-in-binary-tree","has_notes":false,"flag_type":1}