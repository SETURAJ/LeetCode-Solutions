{"id":703868873,"lang":"cpp","lang_name":"C++","time":"1 year, 7 months","timestamp":1653113946,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/703868873/","is_pending":"Not Pending","title":"Cousins in Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isCousins(TreeNode* root, int x, int y) {\n        if(root->val ==x || root->val ==y)\n            return false;\n        queue<pair<TreeNode* , int>>q;\n        q.push({root,0});\n        int h=0,a=0,b=0;\n        while(!q.empty())\n        {\n            \n            int len=q.size();\n            h++;\n            for(int i=0;i<len;i++)\n            {\n                TreeNode* node=q.front().first;\n                int s=q.front().second;\n                q.pop();\n                if(node->val==x)\n                    a=s;\n                else if(node->val==y)\n                    b=s;\n                if(node->left)\n                    q.push({node->left,h});\n                if(node->right)\n                    q.push({node->right,h});       \n            }\n        }\n        return a==b && a!=1 && b!=1;\n    }\n};","compare_result":"111111101111111101111111111111111111111111111111111111110111111111111111111110111111111011111111111111111","title_slug":"cousins-in-binary-tree","has_notes":false,"flag_type":1}