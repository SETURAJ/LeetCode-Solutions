{"id":701256644,"lang":"cpp","lang_name":"C++","time":"1 year, 7 months","timestamp":1652771948,"status":10,"status_display":"Accepted","runtime":"110 ms","url":"/submissions/detail/701256644/","is_pending":"Not Pending","title":"Insert into a Binary Search Tree","memory":"56.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* insertIntoBST(TreeNode* root, int val) {\n        if(root==NULL)\n        {\n            TreeNode* node=new TreeNode(val);\n            return node;\n        }\n        if(val>root->val)\n            root->right=insertIntoBST(root->right,val);\n        else \n            root->left=insertIntoBST(root->left,val);\n        return root;\n    }\n};","compare_result":"11111111111111111111111111111111111","title_slug":"insert-into-a-binary-search-tree","has_notes":false,"flag_type":1}