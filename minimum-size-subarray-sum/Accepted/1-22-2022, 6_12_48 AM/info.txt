{"id":625199229,"lang":"cpp","lang_name":"C++","time":"1 year, 11 months","timestamp":1642849968,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/625199229/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"10.5 MB","code":"class Solution {\npublic:\n    int minSubArrayLen(int target, vector<int>& nums) {\n        int sum=0;\n        int right=0,left=0;\n        int ans=INT_MAX;\n        for(int right=0; right<nums.size(); right++)\n        {\n            sum+=nums[right];\n            while(sum>=target)\n            {\n                ans=min(ans,right-left+1);\n                sum-=nums[left];\n                left++;\n            }\n        }\n        return ans==INT_MAX ? 0:ans;\n    }\n};","compare_result":"1111111111111111111","title_slug":"minimum-size-subarray-sum","has_notes":false,"flag_type":1}