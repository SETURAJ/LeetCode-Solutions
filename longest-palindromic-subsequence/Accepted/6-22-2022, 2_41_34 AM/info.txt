{"id":728252417,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1655880094,"status":10,"status_display":"Accepted","runtime":"266 ms","url":"/submissions/detail/728252417/","is_pending":"Not Pending","title":"Longest Palindromic Subsequence","memory":"73.1 MB","code":"class Solution {\npublic:\n    \n    int lcs(string s1,string s2)\n    {\n        int l1=s1.length(),l2=s2.length();\n        vector<vector<int>>dp(l1+1,vector<int>(l2+1,0));\n        for(int i=1;i<=l1;i++)\n        {\n            for(int j=1;j<=l2;j++)\n            {\n                if(s1[i-1]==s2[j-1])\n                    dp[i][j]=dp[i-1][j-1]+1;\n                else\n                    dp[i][j]=max(dp[i-1][j],dp[i][j-1]);\n            }\n        }\n        return dp[l1][l2];\n    }\n    \n    int longestPalindromeSubseq(string s) {\n        if(s.length()==1)\n            return 1;\n        string s1=s;\n        reverse(s.begin(),s.end());\n        return lcs(s1,s);\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-subsequence","has_notes":false,"flag_type":1}