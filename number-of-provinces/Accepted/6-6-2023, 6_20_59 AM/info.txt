{"id":965070732,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1686046859,"status":10,"status_display":"Accepted","runtime":"21 ms","url":"/submissions/detail/965070732/","is_pending":"Not Pending","title":"Number of Provinces","memory":"14.2 MB","code":"class Solution {\npublic:\n\n    void bfs(int node,vector<vector<int>>&isConnected,vector<bool>&visited)\n    {\n        queue<int>q;\n        q.push(node);\n        visited[node]=true;\n        while(!q.empty())\n        {\n            node = q.front();\n            q.pop();\n\n            for(int i=0;i<isConnected.size();i++)\n            {\n                if(isConnected[node][i] && !visited[i])\n                {\n                    q.push(i);\n                    visited[i]=true;\n                }\n            }\n        }\n    }\n\n    int findCircleNum(vector<vector<int>>& isConnected) {\n        int res=0;\n        int n=isConnected.size();\n        vector<bool>visited(n,false);\n\n        for(int i=0;i<n;i++)\n        {\n            if(!visited[i])\n            {\n                res++;\n                bfs(i,isConnected,visited);\n            }\n        }\n        return res;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-provinces","has_notes":false,"flag_type":1}