{"id":1128457855,"lang":"cpp","lang_name":"C++","time":"1 week, 5 days","timestamp":1703545825,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1128457855/","is_pending":"Not Pending","title":"Best Time to Buy and Sell Stock with Cooldown","memory":"12.1 MB","code":"class Solution {\npublic:\n    /*\n    int findprofit(vector<int>&prices,int ind,int buy,int n,vector<vector<int>>&dp)\n    {\n        if(ind>=n)\n            return 0;\n        if(dp[ind][buy]!=-1)\n            return dp[ind][buy];\n        if(buy==1)\n        {\n            return dp[ind][buy]=max(-prices[ind]+findprofit(prices,ind+1,0,n,dp),0+ findprofit(prices,ind+1,1,n,dp));\n        }\n        return dp[ind][buy]=max(prices[ind]+findprofit(prices,ind+2,1,n,dp), 0+ findprofit(prices,ind+1,0,n,dp));\n    }\n    \n    */\n    int maxProfit(vector<int>& prices) {\n        int n = prices.size();\n        vector<vector<int>>dp(n+2,vector<int>(2,0));\n        for(int ind=n-1;ind>=0;ind--)\n        {\n            for(int buy=0;buy<=1;buy++)\n            {\n                if(buy==1)\n                {\n                    dp[ind][buy]=max(-prices[ind]+dp[ind+1][0],0+ dp[ind+1][1]);\n                }\n                else\n                    dp[ind][buy]=max(prices[ind]+dp[ind+2][1],0+dp[ind+1][0]);\n            }\n        }\n        \n        return dp[0][1];\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"best-time-to-buy-and-sell-stock-with-cooldown","has_notes":false,"flag_type":1}