{"id":859287485,"lang":"cpp","lang_name":"C++","time":"1Â year","timestamp":1670953898,"status":10,"status_display":"Accepted","runtime":"1239 ms","url":"/submissions/detail/859287485/","is_pending":"Not Pending","title":"Minimum Falling Path Sum II","memory":"15.8 MB","code":"class Solution {\npublic:\n    int minFallingPathSum(vector<vector<int>>& grid) {\n        int m=grid.size();\n        int n=grid[0].size();\n        if(m==1 && n==1)\n            return grid[0][0];\n        if(m==1)\n        {\n            int res=INT_MAX;\n            for(int i=0;i<n;i++)\n                res=min(res,grid[0][i]);\n            return res;\n        }\n        vector<vector<int>>dp(m,vector<int>(n,INT_MAX));\n        for(int i=0;i<n;i++)\n            dp[0][i]=grid[0][i];\n        for(int i=1;i<m;i++)\n        {\n            for(int j=0;j<n;j++)\n            {\n                int prev=INT_MAX;\n                for(int k=0;k<n;k++)\n                {\n                    if(k!=j)\n                    {\n                        int trace=dp[i-1][k]+grid[i][j];\n                        prev=min(prev,trace);\n                    }\n                }\n                dp[i][j]=prev;\n            }\n        }\n        int res=INT_MAX;\n        for(int i=0;i<n;i++)\n            res=min(res,dp[m-1][i]);\n        return res;\n\n    }\n};","compare_result":"1111111111111111","title_slug":"minimum-falling-path-sum-ii","has_notes":false,"flag_type":1}