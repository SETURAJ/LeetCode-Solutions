{"id":609350546,"lang":"cpp","lang_name":"C++","time":"2Â years","timestamp":1640810683,"status":10,"status_display":"Accepted","runtime":"23 ms","url":"/submissions/detail/609350546/","is_pending":"Not Pending","title":"Maximum Depth of Binary Tree","memory":"18.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    int height(TreeNode* root)\n    {\n        int lheight=0;\n        int rheight=0;\n        if(root==NULL)\n            return 0;\n        return 1+max(height(root->left),height(root->right));\n    }\n    \n    int maxDepth(TreeNode* root) {\n        if(root==NULL)\n            return 0;\n        return height(root);\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"maximum-depth-of-binary-tree","has_notes":false,"flag_type":1}