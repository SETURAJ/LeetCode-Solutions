{"id":1071414337,"lang":"cpp","lang_name":"C++","time":"2 months, 4 weeks","timestamp":1696901671,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1071414337/","is_pending":"Not Pending","title":"Find First and Last Position of Element in Sorted Array","memory":"N/A","code":"class Solution {\npublic:\n    \n    int binarysearch(vector<int> nums, int l, int r, int target)\n    {\n        if(r>=l)\n        {\n            int mid = (l+r)/2;\n            if(nums[mid]==target)\n                return mid;\n            if(nums[mid]>target)\n                return binarysearch(nums,l,mid-1,target);\n            else\n                return binarysearch(nums,mid+1,r,target);\n        }\n        return -1;\n    }\n    \n    vector<int> searchRange(vector<int>& nums, int target) {\n        int index=-1;\n        vector<int> res(2,-1);\n        index = binarysearch(nums,0,nums.size()-1,target);\n        if(!nums.size()  || index == -1)\n            return res;\n        int start =index;\n        int end =index;\n        int j=index;\n        cout<<index<<endl;\n        \n        for(int i=index;i>0;i--)\n        {\n            if(nums[i]==target)\n                start=i;\n        }\n        \n   \n        for(int i=index;i<nums.size();i++)\n        {\n            if(nums[i]==target)\n                end=i;\n        }\n        \n        \n        res[0]=start;\n        res[1]=end;\n        return res;\n    }\n};","compare_result":"1111111111111111010111111101111111111111111101111111111111111101111111110111111011111011","title_slug":"find-first-and-last-position-of-element-in-sorted-array","has_notes":false,"flag_type":1}