{"id":699804348,"lang":"cpp","lang_name":"C++","time":"1 year, 7 months","timestamp":1652592240,"status":10,"status_display":"Accepted","runtime":"203 ms","url":"/submissions/detail/699804348/","is_pending":"Not Pending","title":"Deepest Leaves Sum","memory":"61.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int deepestLeavesSum(TreeNode* root) {\n        queue<TreeNode*>q;\n        q.push(root);\n        int ans=0,len=0;\n        while(q.size()>0)\n        {\n            ans=0;\n            len=q.size();\n            for(int i=0;i<len;i++)\n            {\n                TreeNode* curr=q.front();\n                q.pop();\n                ans+=curr->val;\n                if(curr->left)\n                    q.push(curr->left);\n                if(curr->right)\n                    q.push(curr->right);\n            }\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111","title_slug":"deepest-leaves-sum","has_notes":false,"flag_type":1}