{"id":699124835,"lang":"cpp","lang_name":"C++","time":"1 year, 7 months","timestamp":1652512683,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/699124835/","is_pending":"Not Pending","title":"Network Delay Time","memory":"N/A","code":"class Solution {\npublic:\n    const int inf = 1e9;\n    vector<int>dijkstra(vector<pair<int,int>>graph[],int start,int V)\n    {\n        vector<int>dist(V+1,inf);\n        vector<bool>vis(V+1,false);\n        priority_queue<pair<int,int>,vector<pair<int,int>>>pq;\n        pq.push(make_pair(0,start));\n        dist[start]=0;\n        while(!pq.empty())\n        {\n            int u=pq.top().second;\n            pq.pop();\n            if(vis[u])continue;\n            vis[u]=true;\n            for(int i=0;i<graph[u].size();i++)\n            {\n                int v=graph[u][i].first;\n                int w=graph[u][i].second;\n                if(dist[v]>dist[u]+w)\n                {\n                    dist[v]=dist[u]+w;\n                    pq.push(make_pair(dist[v],v));\n                }\n            }\n        }\n        return dist;\n    }\n    \n    int networkDelayTime(vector<vector<int>>& times, int n, int k) {\n        vector<pair<int,int>>graph[n+1];\n        for(const auto& edge:times)\n        {\n            graph[edge[0]].emplace_back(edge[1],edge[2]);\n        }\n        vector<int>dist=dijkstra(graph,k,n);\n        int ans=*max_element(dist.begin()+1,dist.end());\n        return ans==inf?-1:ans;\n    }\n};","compare_result":"1111111111111111101011000001100000000000000000000000","title_slug":"network-delay-time","has_notes":false,"flag_type":1}