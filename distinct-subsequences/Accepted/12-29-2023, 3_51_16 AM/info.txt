{"id":1131246958,"lang":"cpp","lang_name":"C++","time":"1 week, 2 days","timestamp":1703839876,"status":10,"status_display":"Accepted","runtime":"85 ms","url":"/submissions/detail/1131246958/","is_pending":"Not Pending","title":"Distinct Subsequences","memory":"30.4 MB","code":"class Solution {\npublic:\n    /*\n    int findsub(int i,int j,string s,string t,vector<vector<int>>&dp)\n    {\n        if(j<0)\n            return 1;\n        if(i<0)\n            return 0;\n        if(dp[i][j]!=-1)\n            return dp[i][j];\n        if(s[i]==t[j])\n            return dp[i][j] =  findsub(i-1,j-1,s,t,dp) + findsub(i-1,j,s,t,dp);\n        return dp[i][j] = findsub(i-1,j,s,t,dp);\n    }\n    */\n    \n    int numDistinct(string s, string t) {\n        int l1 = s.length();\n        int l2 = t.length();\n        vector<vector<long long int>>dp(l1+1,vector<long long int>(l2+1,-1));\n        dp[0][0] = 1;\n        for(int i=1;i<=l1;i++)\n            dp[i][0] = 1;\n        for(int j=1;j<=l2;j++)\n            dp[0][j] = 0;\n        for(int i=1;i<=l1;i++)\n        {\n            for(int j=1;j<=l2;j++)\n            {\n                if(s[i-1]==t[j-1])\n                    dp[i][j] = (dp[i-1][j-1] + dp[i-1][j])%1000000007;\n                else\n                    dp[i][j] = (dp[i-1][j])%1000000007;\n            }\n        }\n        return dp[l1][l2];\n        //return findsub(l1,l2,s,t,dp);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"distinct-subsequences","has_notes":false,"flag_type":1}