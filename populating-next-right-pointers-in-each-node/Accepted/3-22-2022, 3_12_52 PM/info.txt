{"id":665242609,"lang":"cpp","lang_name":"C++","time":"1 year, 9 months","timestamp":1647976372,"status":10,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/665242609/","is_pending":"Not Pending","title":"Populating Next Right Pointers in Each Node","memory":"16.8 MB","code":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    Node* left;\n    Node* right;\n    Node* next;\n\n    Node() : val(0), left(NULL), right(NULL), next(NULL) {}\n\n    Node(int _val) : val(_val), left(NULL), right(NULL), next(NULL) {}\n\n    Node(int _val, Node* _left, Node* _right, Node* _next)\n        : val(_val), left(_left), right(_right), next(_next) {}\n};\n*/\n\nclass Solution {\npublic:\n    Node* connect(Node* root) {\n        if(root==NULL || root->left==NULL || root->right==NULL)\n            return root;\n            Node* temp=root;\n            while(temp)\n            {\n                temp->left->next=temp->right;\n                if(temp->next)\n                    temp->right->next=temp->next->left;\n                temp=temp->next;\n            }\n        connect(root->left);\n        return root;\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"populating-next-right-pointers-in-each-node","has_notes":false,"flag_type":1}