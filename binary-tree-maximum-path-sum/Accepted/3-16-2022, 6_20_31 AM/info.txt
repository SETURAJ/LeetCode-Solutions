{"id":661106698,"lang":"cpp","lang_name":"C++","time":"1 year, 9 months","timestamp":1647426031,"status":10,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/661106698/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"27.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    int findsum(TreeNode *root,int &ans)\n    {\n        if(root==NULL)\n            return 0;\n        int left=max(0,findsum(root->left,ans));\n        int right=max(0,findsum(root->right,ans));\n        int val=root->val;\n        ans=max(ans,left+right+val);\n        return max(left,right) +val;\n    }\n    \n    int maxPathSum(TreeNode* root) {\n        int ans=INT_MIN;\n        findsum(root,ans);\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-maximum-path-sum","has_notes":false,"flag_type":1}