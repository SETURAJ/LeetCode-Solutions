{"id":661021247,"lang":"cpp","lang_name":"C++","time":"1 year, 9 months","timestamp":1647413227,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/661021247/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"12.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> levelOrder(TreeNode* root) {\n        vector<vector<int>>res;\n        if(root==NULL)\n            return res;\n        queue<TreeNode *>q;\n        q.push(root);\n        while(!q.empty())\n        {\n            int n=q.size();\n            vector<int>vec;\n            for(int i=0;i<n;i++)\n            {\n                TreeNode *temp=q.front();\n                q.pop();\n                \n                vec.push_back(temp->val);\n                if(temp->left)\n                    q.push(temp->left);\n                if(temp->right)\n                    q.push(temp->right);\n            }\n            res.push_back(vec);\n        }\n        return res;\n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal","has_notes":false,"flag_type":1}