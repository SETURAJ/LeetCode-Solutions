{"id":702595076,"lang":"cpp","lang_name":"C++","time":"1 year, 7 months","timestamp":1652941725,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/702595076/","is_pending":"Not Pending","title":"Binary Tree Tilt","memory":"23.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int tiltsum=0;\n    \n    int postorder(TreeNode* root)\n    {\n        if(root==NULL)\n            return 0;\n        int leftsum=postorder(root->left);\n        int rightsum=postorder(root->right);\n        tiltsum+=abs(leftsum-rightsum);\n        return leftsum+rightsum+root->val;\n    }\n    \n    int findTilt(TreeNode* root) {\n        postorder(root);\n        return tiltsum;\n    }\n    \n    \n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-tilt","has_notes":false,"flag_type":1}