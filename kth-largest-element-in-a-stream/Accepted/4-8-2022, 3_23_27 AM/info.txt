{"id":676238837,"lang":"cpp","lang_name":"C++","time":"1 year, 9 months","timestamp":1649402607,"status":10,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/676238837/","is_pending":"Not Pending","title":"Kth Largest Element in a Stream","memory":"19.8 MB","code":"class KthLargest {\npublic:\n    priority_queue<int,vector<int>,greater<int>>pq;\n    int size;\n    KthLargest(int k, vector<int>& nums) {\n        size=k;\n        for(int i=0;i<nums.size();i++)\n        {\n            pq.push(nums[i]);\n            if(pq.size()>k)\n                pq.pop();\n        }\n    }\n    \n    int add(int val) {\n        pq.push(val);\n        if(pq.size()>size)\n            pq.pop();\n        return pq.top();\n    }\n};\n\n/**\n * Your KthLargest object will be instantiated and called as such:\n * KthLargest* obj = new KthLargest(k, nums);\n * int param_1 = obj->add(val);\n */","compare_result":"1111111111","title_slug":"kth-largest-element-in-a-stream","has_notes":false,"flag_type":1}