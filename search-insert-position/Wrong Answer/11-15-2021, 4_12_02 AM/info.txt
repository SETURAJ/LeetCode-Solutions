{"id":587476819,"lang":"cpp","lang_name":"C++","time":"2 years, 1 month","timestamp":1636967522,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/587476819/","is_pending":"Not Pending","title":"Search Insert Position","memory":"N/A","code":"class Solution {\npublic:\n    int binarysearch(vector<int>& arr,int l,int r,int target)\n    {\n        if(r>=l)\n        {\n            int mid=(r+l)/2;\n            if(arr[mid]==target)\n                return mid;\n            if(arr[mid]<target)\n            {\n                if(arr[mid+1]>=target)\n                    return mid+1;\n                else\n                    return binarysearch(arr,mid+1,r,target);\n            }\n            if(arr[mid]>target)\n            {\n                if(arr[mid-1]<=target)\n                    return mid-1;\n                else\n                    return binarysearch(arr,l,mid-1,target);\n            }\n        }\n        return 0;\n    }\n    int searchInsert(vector<int>& nums, int target) {\n        \n        int l=0,r=nums.size()-1;\n        return binarysearch(nums,l,r,target);\n    }\n};","compare_result":"1000000000000000000000000000000000000000000000000000000000000000","title_slug":"search-insert-position","has_notes":false,"flag_type":1}