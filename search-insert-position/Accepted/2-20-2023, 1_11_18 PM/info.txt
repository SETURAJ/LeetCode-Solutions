{"id":901742930,"lang":"cpp","lang_name":"C++","time":"10 months, 3 weeks","timestamp":1676916678,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/901742930/","is_pending":"Not Pending","title":"Search Insert Position","memory":"9.6 MB","code":"class Solution {\npublic:\n    int binarysearch(vector<int>& arr,int target)\n    {\n        int l=0,r=(int)arr.size()-1,mid,ans=-1;\n        while(r>=l)\n        {\n            mid=(r+l)/2;\n            if(arr[mid]==target)\n                return mid;\n            if(arr[mid]<target)\n            {\n                ans=mid+1;\n                l=mid+1;\n            }\n            else\n            {\n                ans=mid;\n                r=mid-1;\n            }\n                \n        }\n        return ans;\n        \n    }\n    int searchInsert(vector<int>& nums, int target) {\n        \n       return binarysearch(nums,target);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-insert-position","has_notes":false,"flag_type":1}