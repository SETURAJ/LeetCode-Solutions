{"id":720688064,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1655062366,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/720688064/","is_pending":"Not Pending","title":"Reverse Nodes in k-Group","memory":"11.4 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    \n    int lengthoflist(ListNode* head)\n    {\n        int l=0;\n        while(head!=NULL)\n        {\n            l++;\n            head=head->next;\n        }\n        return l;\n    }\n    \n    ListNode* reverseKGroup(ListNode* head, int k) {\n       if(head==NULL || head->next==NULL)\n           return head;\n        int length=lengthoflist(head);\n        ListNode* dummy=new ListNode(0);\n        dummy->next=head;\n        ListNode* prev=dummy;;\n        ListNode* curr,*nex;\n        while(length>=k)\n        {\n            curr=prev->next;\n            nex=curr->next;\n            for(int i=1;i<k;i++)\n            {\n                curr->next=nex->next;\n                nex->next=prev->next;\n                prev->next=nex;\n                nex=curr->next;\n            }\n            length-=k;\n            prev=curr;\n        }\n        return dummy->next;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"reverse-nodes-in-k-group","has_notes":false,"flag_type":1}