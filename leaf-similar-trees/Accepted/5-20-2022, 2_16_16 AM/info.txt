{"id":703257732,"lang":"cpp","lang_name":"C++","time":"1 year, 7 months","timestamp":1653027376,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/703257732/","is_pending":"Not Pending","title":"Leaf-Similar Trees","memory":"12.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    void dfs(TreeNode* root,string &s)\n    {\n        if(root==NULL)\n            return;\n        if(root->left== NULL && root->right ==NULL)\n            s+=to_string(root->val)+\"#\";\n        dfs(root->left,s);\n        dfs(root->right,s);\n    }\n    \n    bool leafSimilar(TreeNode* root1, TreeNode* root2) {\n        string s1,s2;\n        dfs(root1,s1);\n        dfs(root2,s2);\n        return s1==s2;\n    }\n};","compare_result":"1111111111111111111111111111111111111111","title_slug":"leaf-similar-trees","has_notes":false,"flag_type":1}