{"id":701917662,"lang":"cpp","lang_name":"C++","time":"1 year, 7 months","timestamp":1652854736,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/701917662/","is_pending":"Not Pending","title":"Binary Search Tree to Greater Sum Tree","memory":"8.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    void revinorder(TreeNode* root,int &count)\n    {\n        if(root==NULL)\n            return;\n        revinorder(root->right,count);\n        \n        root->val+=count;\n        count=root->val;\n            \n        revinorder(root->left,count);\n    }\n    \n    TreeNode* bstToGst(TreeNode* root) {\n        int count=0;\n        revinorder(root,count);\n        return root;\n    }\n};","compare_result":"1111111111111111111111111111","title_slug":"binary-search-tree-to-greater-sum-tree","has_notes":false,"flag_type":1}