{"id":701196054,"lang":"cpp","lang_name":"C++","time":"1 year, 7 months","timestamp":1652765490,"status":10,"status_display":"Accepted","runtime":"843 ms","url":"/submissions/detail/701196054/","is_pending":"Not Pending","title":"Find a Corresponding Node of a Binary Tree in a Clone of That Tree","memory":"164 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\n\nclass Solution {\npublic:\n    \n    TreeNode* res=new TreeNode();\n    void inorder(TreeNode* root1,TreeNode* root2, TreeNode* target)\n    {\n        if(root1==NULL || root2==NULL)\n            return;\n        inorder(root1->left,root2->left,target);\n        if(root1==target)\n            res=root2;\n        inorder(root1->right,root2->right,target);\n    }\n    \n    TreeNode* getTargetCopy(TreeNode* original, TreeNode* cloned, TreeNode* target) {\n        inorder(original,cloned,target);\n        return res;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree","has_notes":false,"flag_type":1}