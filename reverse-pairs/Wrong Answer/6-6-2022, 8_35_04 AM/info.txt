{"id":715700487,"lang":"cpp","lang_name":"C++","time":"1 year, 7 months","timestamp":1654518904,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/715700487/","is_pending":"Not Pending","title":"Reverse Pairs","memory":"N/A","code":"class Solution {\npublic:\n    int inv_count=0;\n    int merge(vector<int>&nums,int left,int mid,int right)\n    {\n        int res=0;\n        int l=left,r=mid+1;\n        while(l<=mid && r<=right)\n        {\n            if(nums[l]>(long)2*nums[r])\n            {\n                res+=(mid-l+1);\n                r++;\n            }\n            else\n                l++;\n        }\n        sort(nums.begin()+left,nums.begin()+right+1);\n        return res;\n       \n    }\n    \n    int MergeSort(vector<int>nums,int left,int right)\n    {\n        int mid;\n        if(right>left)\n        {\n            mid=(left+right)/2;\n            inv_count+=MergeSort(nums,left,mid);\n            inv_count+=MergeSort(nums,mid+1,right);\n            \n            inv_count+=merge(nums,left,mid,right);\n        }\n        return inv_count;\n    }\n    \n    int reversePairs(vector<int>& nums) {\n  \n        return MergeSort(nums,0,nums.size()-1);\n    }\n};","compare_result":"1011011111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"reverse-pairs","has_notes":false,"flag_type":1}