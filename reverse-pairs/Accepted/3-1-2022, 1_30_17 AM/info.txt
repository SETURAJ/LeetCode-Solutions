{"id":651069506,"lang":"cpp","lang_name":"C++","time":"1 year, 10 months","timestamp":1646116217,"status":10,"status_display":"Accepted","runtime":"742 ms","url":"/submissions/detail/651069506/","is_pending":"Not Pending","title":"Reverse Pairs","memory":"45.1 MB","code":"class Solution {\npublic:\n    \n    int Merge(vector<int>&nums,int low,int mid,int high)\n    {\n        int total=0;\n        int j=mid+1;\n        for(int i=low;i<=mid;i++)\n        {\n            while(j<=high && nums[i]>2LL*nums[j])\n                j++;\n            total+=(j-(mid+1));\n        }\n        sort(nums.begin()+low,nums.begin()+high+1);\n        return total;\n    }\n    \n    int MergeSort(vector<int>&nums,int low,int high)\n    {\n        if(low>=high)\n            return 0;\n        int mid=(low+high)/2;\n        int res=MergeSort(nums,low,mid);\n        res+=MergeSort(nums,mid+1,high);\n        res+=Merge(nums,low,mid,high);\n        return res;\n    }\n    \n    int reversePairs(vector<int>& nums) {\n        return MergeSort(nums,0,nums.size()-1);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"reverse-pairs","has_notes":false,"flag_type":1}