{"id":715706535,"lang":"cpp","lang_name":"C++","time":"1 year, 7 months","timestamp":1654519619,"status":10,"status_display":"Accepted","runtime":"555 ms","url":"/submissions/detail/715706535/","is_pending":"Not Pending","title":"Reverse Pairs","memory":"45.1 MB","code":"class Solution {\npublic:\n    int res;\n    void merge(vector<int>&nums,int left,int mid,int right)\n    {\n    \n        int l=left,r=mid+1;\n        while(l<=mid && r<=right)\n        {\n            if(nums[l]>(long)2*nums[r])\n            {\n                res+=(mid-l+1);\n                r++;\n            }\n            else\n                l++;\n        }\n        sort(nums.begin()+left,nums.begin()+right+1);\n        return ;\n       \n    }\n    \n    void MergeSort(vector<int>&nums,int left,int right)\n    {\n        \n        if(left>=right)\n            return;\n            int mid;\n            mid=(left+right)/2;\n            MergeSort(nums,left,mid);\n            MergeSort(nums,mid+1,right);\n            \n            merge(nums,left,mid,right);\n        \n    }\n    \n    int reversePairs(vector<int>& nums) {\n        if(!nums.size())\n            return 0;\n    \n        MergeSort(nums,0,nums.size()-1);\n        return res;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"reverse-pairs","has_notes":false,"flag_type":1}