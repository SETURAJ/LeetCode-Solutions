{"id":815791907,"lang":"cpp","lang_name":"C++","time":"1 year, 3 months","timestamp":1664979957,"status":10,"status_display":"Accepted","runtime":"27 ms","url":"/submissions/detail/815791907/","is_pending":"Not Pending","title":"Find Largest Value in Each Tree Row","memory":"22.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n\n    vector<int> largestValues(TreeNode* root) {\n        vector<int>res;\n        queue<TreeNode*>q;\n        if(root==NULL)\n            return res;\n        q.push(root);\n        while(!q.empty())\n        {\n            int sz=q.size();\n            int maxa=INT_MIN;\n            for(int i=0;i<sz;i++)\n            {\n                TreeNode* node=q.front();\n                q.pop();\n                maxa=max(maxa,node->val);\n                if(node->left)\n                    q.push(node->left);\n                if(node->right)\n                    q.push(node->right);\n            }\n            res.push_back(maxa);\n        }\n        return res;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-largest-value-in-each-tree-row","has_notes":false,"flag_type":1}