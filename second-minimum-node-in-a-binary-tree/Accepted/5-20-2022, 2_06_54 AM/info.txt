{"id":703252492,"lang":"cpp","lang_name":"C++","time":"1 year, 7 months","timestamp":1653026814,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/703252492/","is_pending":"Not Pending","title":"Second Minimum Node In a Binary Tree","memory":"7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    long long int ans=LLONG_MAX;\n    void findval(TreeNode* root,int curr)\n    {\n        if(!root)\n            return;\n        if(root->val !=curr && (ans>root->val))\n            ans=root->val;\n        if(ans<=root->val)\n            return;\n        findval(root->left,curr);\n        findval(root->right,curr);\n    }\n    \n    int findSecondMinimumValue(TreeNode* root) {\n        findval(root,root->val);\n        if(ans==LLONG_MAX)\n            return -1;\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"second-minimum-node-in-a-binary-tree","has_notes":false,"flag_type":1}