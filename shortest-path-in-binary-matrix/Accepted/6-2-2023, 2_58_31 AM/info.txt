{"id":962154905,"lang":"cpp","lang_name":"C++","time":"7 months, 1 week","timestamp":1685689111,"status":10,"status_display":"Accepted","runtime":"374 ms","url":"/submissions/detail/962154905/","is_pending":"Not Pending","title":"Shortest Path in Binary Matrix","memory":"74.9 MB","code":"class Solution {\npublic:\n    int shortestPathBinaryMatrix(vector<vector<int>>& grid) {\n        int m=grid.size();\n        int n=grid[0].size();\n        if(m==0 || n==0)\n            return -1;\n        if(grid[0][0]!=0 || grid[m-1][n-1]!=0)\n            return -1;\n        queue<pair<int,int>>q;\n        q.push(make_pair(0,0));\n        vector<vector<int>>dir={{1,1},{0,1},{1,0},{-1,-1},{0,-1},{-1,0},{1,-1},{-1,1}};\n        grid[0][0]=1;\n        while(!q.empty())\n        {\n            auto curr=q.front();\n            int x=curr.first,y=curr.second;\n            if(x==m-1 && y==n-1)\n                return grid[x][y];\n            for(auto d:dir)\n            {\n                int nx=d[0]+x;\n                int ny=d[1]+y;\n                if(nx>=0 && nx<m &&ny>=0 &&ny<n && grid[nx][ny]==0)\n                {\n                    q.push(make_pair(nx,ny));\n                    grid[nx][ny]=grid[x][y]+1;\n                }\n                \n            }\n            q.pop();\n        }\n        return -1;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"shortest-path-in-binary-matrix","has_notes":false,"flag_type":1}