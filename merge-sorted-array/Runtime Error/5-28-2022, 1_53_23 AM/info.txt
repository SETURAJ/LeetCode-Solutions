{"id":708778174,"lang":"cpp","lang_name":"C++","time":"1 year, 7 months","timestamp":1653717203,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/708778174/","is_pending":"Not Pending","title":"Merge Sorted Array","memory":"N/A","code":"class Solution {\npublic:\n    \n    void msa(vector<int>& nums1,  vector<int>& nums2, int m,int n)\n    {\n        int gap=ceil((float)(m+n)/2);\n        while(gap>0)\n        {\n            int i=0,j=gap;\n            while(j<(m+n))\n            {\n                if(j<m && nums1[i]>nums2[j])\n                    swap(nums1[i],nums2[j]);\n                else if(j>=m && i<m && nums1[i]>nums2[j-m])\n                    swap(nums1[i],nums2[j-n]);\n                else if(j>=m && i>=m && nums2[i-m]>nums2[j-m])\n                    swap(nums2[i-m],nums2[j-m]);\n                i++;\n                j++;\n            }\n            if(gap==1)\n                gap=0;\n            else\n                gap=ceil((float)gap/2);\n        }\n        for(int i=0;i<n;i++)\n            nums1.push_back(nums2[i]);\n    }\n    \n    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {\n        vector<int>::iterator it1,it2;\n        it1=nums1.begin()+m;\n        it2=nums1.end();\n        nums1.erase(it1,it2);\n        \n        msa(nums1,nums2,m,n);\n    }\n};","compare_result":"11111111000000000000000000000000000000000000000000000000000","title_slug":"merge-sorted-array","has_notes":false,"flag_type":1}