{"id":708769410,"lang":"cpp","lang_name":"C++","time":"1 year, 7 months","timestamp":1653716255,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/708769410/","is_pending":"Not Pending","title":"Merge Sorted Array","memory":"N/A","code":"class Solution {\npublic:\n    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {\n        vector<int>::iterator it1,it2;\n        it1=nums1.begin()+m;\n        it2=nums1.end();\n        nums1.erase(it1,it2);\n        it1=nums2.begin()+n;\n        it2=nums2.end();\n        nums2.erase(it1,it2);\n        int i=0,j=0;\n        while(i<m&&j<n)\n        {\n            if(nums1[i]<nums2[j])\n                i++;\n            else if(nums1[i]==nums2[j])\n            {\n                swap(nums1[i],nums2[j]);\n                    i++;\n            }\n            else if(nums2[j]<nums1[i])\n            {\n                swap(nums1[i],nums2[j]);\n                j++;\n                i++;\n            }\n        }\n        \n        for(int i=0;i<n;i++)\n            nums1.push_back(nums2[i]);\n        //sort(nums1.begin(),nums1.end());\n    }\n};","compare_result":"11111111100111010000001001000001000000000000000000000001100","title_slug":"merge-sorted-array","has_notes":false,"flag_type":1}