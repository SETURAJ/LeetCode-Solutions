{"id":609357231,"lang":"cpp","lang_name":"C++","time":"2Â years","timestamp":1640811486,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/609357231/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    int height(TreeNode* root,int m)\n    {\n        if(root==NULL)\n            return 0;\n        int lheight=m;\n        int rheight=m;\n        lheight=height(root->left,min(lheight,rheight));\n        rheight=height(root->right,min(lheight,rheight));\n        return 1+min(lheight,rheight);\n    }\n    \n    int minDepth(TreeNode* root) {\n        if(root==NULL)\n            return 0;\n        return height(root,1);\n    }\n};","compare_result":"1011001100010111101001000101000110100001111111110011","title_slug":"minimum-depth-of-binary-tree","has_notes":false,"flag_type":1}