{"id":609373552,"lang":"cpp","lang_name":"C++","time":"2Â years","timestamp":1640813531,"status":10,"status_display":"Accepted","runtime":"390 ms","url":"/submissions/detail/609373552/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"144.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n   \n    \n    int minDepth(TreeNode* root) {\n        if(root==NULL)\n            return 0;\n        if(root->left==NULL && root->right==NULL)\n            return 1;\n        if(root->left==NULL && root->right!=NULL)\n            return 1+minDepth(root->right);\n        if(root->left!=NULL && root->right==NULL)\n            return 1+minDepth(root->left);\n        return 1+min(minDepth(root->left),minDepth(root->right));\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"minimum-depth-of-binary-tree","has_notes":false,"flag_type":1}