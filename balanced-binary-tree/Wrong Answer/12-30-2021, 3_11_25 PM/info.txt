{"id":609970726,"lang":"cpp","lang_name":"C++","time":"2Â years","timestamp":1640895085,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/609970726/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    int check(TreeNode* root)\n    {\n        if(root==NULL)\n            return 0;\n        int lheight=0;\n        int rheight=0;\n        lheight=check(root->left);\n        rheight=check(root->right);\n        if(abs(lheight-rheight)>1)\n            return 0;\n        else if(lheight>rheight)\n            return lheight+1;\n        else\n            return rheight+1;\n        \n    }\n    \n    bool isBalanced(TreeNode* root) {\n        if(root==NULL)\n            return true;\n        if(check(root))\n            return true;\n        return false;\n    }\n};","compare_result":"111111111111011111001100100111100100000001111000000010011110010000000111100000110110000110111111111111111111011000011011000001111000001111111111111111111100000111100000110110000110111111111111111111011000011011111111111001000000","title_slug":"balanced-binary-tree","has_notes":false,"flag_type":1}