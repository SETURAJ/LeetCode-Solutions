{"id":738477931,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1656959964,"status":10,"status_display":"Accepted","runtime":"22 ms","url":"/submissions/detail/738477931/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"20.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int l,r=0;\n    bool flag=true;\n    int check(TreeNode* root,int l,int r)\n    {\n        if(root==NULL)\n            return 0;\n        l=check(root->left,l,r);\n        r=check(root->right,l,r);\n        if(abs(l-r)>1)\n        {\n            flag=false;\n            return 0;\n        }\n        return 1+max(l,r);\n    }\n    \n    bool isBalanced(TreeNode* root) {\n        if(root==NULL)\n            return true;\n       check(root,l,r);\n        return flag;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree","has_notes":false,"flag_type":1}