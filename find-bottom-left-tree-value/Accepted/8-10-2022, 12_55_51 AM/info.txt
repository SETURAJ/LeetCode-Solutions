{"id":769926682,"lang":"cpp","lang_name":"C++","time":"1 year, 5 months","timestamp":1660107351,"status":10,"status_display":"Accepted","runtime":"23 ms","url":"/submissions/detail/769926682/","is_pending":"Not Pending","title":"Find Bottom Left Tree Value","memory":"21.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int findBottomLeftValue(TreeNode* root) {\n        queue<TreeNode* >q;\n        if(!root->left && !root->right)\n            return root->val;\n        q.push(root);\n        while(!q.empty())\n        {\n            root=q.front();\n            q.pop();\n            if(root->right)\n                q.push(root->right);\n            if(root->left)\n                q.push(root->left);\n        }\n        return root->val; \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-bottom-left-tree-value","has_notes":false,"flag_type":1}