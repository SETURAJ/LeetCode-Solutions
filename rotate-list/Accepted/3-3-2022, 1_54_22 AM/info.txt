{"id":652435905,"lang":"cpp","lang_name":"C++","time":"1 year, 10 months","timestamp":1646290462,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/652435905/","is_pending":"Not Pending","title":"Rotate List","memory":"11.7 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    \n    ListNode* rotateRight(ListNode* head, int k) {\n        if(head==NULL)\n            return NULL;\n        int len=1;\n        ListNode* tail=head;\n        while(tail->next!=NULL)\n        {\n            len++;\n            tail=tail->next;\n        }\n        tail->next=head;\n        int n=len-k%len;\n        for(int i=0;i<n;i++)\n            tail=tail->next;\n        head=tail->next;\n        tail->next=NULL;\n        return head;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotate-list","has_notes":false,"flag_type":1}