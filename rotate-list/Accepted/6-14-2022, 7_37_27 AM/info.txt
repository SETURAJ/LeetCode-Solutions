{"id":722017161,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1655206647,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/722017161/","is_pending":"Not Pending","title":"Rotate List","memory":"11.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    \n    ListNode* rotateRight(ListNode* head, int k) {\n        if(head==NULL)\n            return NULL;\n        int len=1;\n        ListNode* last=head;\n        while(last->next)\n        {\n            len++;\n            last=last->next;\n        }\n        last->next=head;\n        int a=len-k%len;\n        ListNode* tail=head;\n        for(int i=0;i<a-1;i++)\n            tail=tail->next;\n        head=tail->next;\n        tail->next=NULL;\n        return head;\n        \n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotate-list","has_notes":false,"flag_type":1}