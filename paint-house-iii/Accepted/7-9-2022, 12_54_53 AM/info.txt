{"id":742253113,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1657342493,"status":10,"status_display":"Accepted","runtime":"107 ms","url":"/submissions/detail/742253113/","is_pending":"Not Pending","title":"Paint House III","memory":"10.7 MB","code":"class Solution {\npublic:\nint dp[101][101][21] = {};\nint dfs(vector<int>& houses, vector<vector<int>>& cost, int i, int target, int last_clr) {\n    if (i >= houses.size() || target < 0)\n        return target == 0 ? target : 1000001;\n    if (houses[i] != 0) // painted last year.\n        return dfs(houses, cost, i + 1, target - (last_clr != houses[i]), houses[i]);      \n    if (dp[i][target][last_clr])\n        return dp[i][target][last_clr];\n    auto res = 1000001;\n    for (auto clr = 1; clr <= cost[i].size(); ++clr) {\n        res = min(res, cost[i][clr - 1] \n            + dfs(houses, cost, i + 1, target - (last_clr != clr), clr));\n    }            \n    return dp[i][target][last_clr] = res;\n}\nint minCost(vector<int>& houses, vector<vector<int>>& cost, int m, int n, int target) {\n    auto res = dfs(houses, cost, 0, target, 0);\n    return res > 1000000 ? -1 : res;\n}\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"paint-house-iii","has_notes":false,"flag_type":1}