{"id":867124994,"lang":"cpp","lang_name":"C++","time":"1Â year","timestamp":1672255946,"status":10,"status_display":"Accepted","runtime":"227 ms","url":"/submissions/detail/867124994/","is_pending":"Not Pending","title":"Minimum Cost Homecoming of a Robot in a Grid","memory":"149.8 MB","code":"class Solution {\npublic:\n    int minCost(vector<int>& startPos, vector<int>& homePos, vector<int>& rowCosts, vector<int>& colCosts) {\n        int res=0;\n        if(homePos[0]>=startPos[0])\n        {\n            for(int i=startPos[0]+1;i<=homePos[0];i++)\n                res+=rowCosts[i]++;\n        }\n        else\n        {\n            for(int i=startPos[0]-1;i>=homePos[0];i--)\n                res+=rowCosts[i]++;\n        }\n        if(homePos[1]>=startPos[1])\n        {\n            for(int i=startPos[1]+1;i<=homePos[1];i++)\n                res+=colCosts[i]++;\n        }\n        else\n        {\n            for(int i=startPos[1]-1;i>=homePos[1];i--)\n                res+=colCosts[i]++;\n        }\n        return res;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-cost-homecoming-of-a-robot-in-a-grid","has_notes":false,"flag_type":1}