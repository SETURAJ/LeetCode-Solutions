{"id":1103086845,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1700528997,"status":10,"status_display":"Accepted","runtime":"188 ms","url":"/submissions/detail/1103086845/","is_pending":"Not Pending","title":"Minimum Amount of Time to Collect Garbage","memory":"104 MB","code":"class Solution {\npublic:\n    int garbageCollection(vector<string>& garbage, vector<int>& travel) {\n        if(garbage.size()==1)\n            return garbage[0].length();\n        vector<int>prefixsum(travel.size()+1,0);\n        prefixsum[1] = travel[0];\n        for(int i=1;i<travel.size();i++)\n            prefixsum[i+1] = prefixsum[i] + travel[i];\n        unordered_map<char,int>umap;\n        int finalg=-1,finalp=-1,finalm=-1;\n        umap['P'] = 0;\n        umap['M'] = 0;\n        umap['G'] = 0;\n         for(int i=0;i<garbage.size();i++)\n        {\n            for(auto c:garbage[i])\n            {\n                umap[c]++;\n                if(c=='G')\n                    finalg = i;\n                if(c=='P')\n                    finalp=i;\n                if(c=='M')\n                    finalm=i;\n            }\n        }\n        int res = 0;\n        if(finalg!=-1)\n            res+=prefixsum[finalg];\n        if(finalp!=-1)\n            res+=prefixsum[finalp];\n        if(finalm!=-1)\n            res+=prefixsum[finalm];\n        res = res + umap['P'] + umap['G'] + umap['M'];\n        return res;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-amount-of-time-to-collect-garbage","has_notes":false,"flag_type":1}