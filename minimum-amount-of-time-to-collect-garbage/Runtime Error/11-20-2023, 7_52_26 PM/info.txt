{"id":1103079940,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1700527946,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1103079940/","is_pending":"Not Pending","title":"Minimum Amount of Time to Collect Garbage","memory":"N/A","code":"class Solution {\npublic:\n    int garbageCollection(vector<string>& garbage, vector<int>& travel) {\n        if(garbage.size()==1)\n            return garbage[0].length();\n        int res = 0;\n        vector<int>prefixsum(travel.size(),0);\n        prefixsum[0] = travel[0];\n        for(int i=1;i<travel.size();i++)\n            prefixsum[i] = prefixsum[i-1] + travel[i];\n        unordered_map<char,int>umap;\n        int finalg=-1,finalp=-1,finalm=-1;\n        for(int i=0;i<garbage.size();i++)\n        {\n            for(auto c:garbage[i])\n            {\n                umap[c]++;\n                if(c=='G')\n                    finalg = i;\n                if(c=='P')\n                    finalp=i;\n                if(c=='M')\n                    finalm=i;\n            }\n        }\n        if(finalm !=-1)\n            res+=prefixsum[finalm-1];\n        if(finalp !=-1)\n            res+=prefixsum[finalp-1];\n        if(finalg !=-1)\n            res+=prefixsum[finalg-1];\n        res = res + umap['M'] + umap['G'] + umap['P'];\n        return res;\n    }\n};","compare_result":"111110000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"minimum-amount-of-time-to-collect-garbage","has_notes":false,"flag_type":1}