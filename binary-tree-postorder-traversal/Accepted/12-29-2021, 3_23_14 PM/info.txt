{"id":609339592,"lang":"cpp","lang_name":"C++","time":"2Â years","timestamp":1640809394,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/609339592/","is_pending":"Not Pending","title":"Binary Tree Postorder Traversal","memory":"8.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    void traversal(TreeNode* root,vector<int>&ans)\n    {\n        if(root!=NULL)\n        {\n            traversal(root->left,ans);\n            traversal(root->right,ans);\n            ans.push_back(root->val);\n        }\n    }\n    \n    vector<int> postorderTraversal(TreeNode* root) {\n        vector<int>ans;\n        traversal(root,ans);\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-postorder-traversal","has_notes":false,"flag_type":1}