{"id":665251898,"lang":"cpp","lang_name":"C++","time":"1 year, 9 months","timestamp":1647977490,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/665251898/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isValidBST(TreeNode* root) {\n        if(root==NULL)\n            return true;\n        if(root->left == NULL && root->right==NULL)\n            return true;\n        if(root->left ==NULL)\n            return true;\n        if(root->right==NULL)\n            return true;\n        if(root->val <= root->left->val)\n            return false;\n        if(root->val >= root->right->val)\n            return false;\n        return isValidBST(root->left) && isValidBST(root->right);\n    }\n};","compare_result":"11111001001000001001111111111111111111110110110000011001001111000010101001110001","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}