{"id":665260572,"lang":"cpp","lang_name":"C++","time":"1 year, 9 months","timestamp":1647978529,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/665260572/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    bool isValid(TreeNode *root,int low,int high)\n    {\n        if(root==NULL)\n            return true;\n        if(root->val <= low || root->val >=high)\n            return false;\n        bool l,r;\n        l=isValid(root->left,low,root->val);\n        r=isValid(root->right,root->val,high);\n        return l&&r;\n            \n    }\n        \n    \n    bool isValidBST(TreeNode* root) {\n        if(root==NULL)\n            return true;\n        return isValid(root,INT_MIN,INT_MAX);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111100111101010111001110","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}