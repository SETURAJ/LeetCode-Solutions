{"id":744900981,"lang":"cpp","lang_name":"C++","time":"1 year, 5 months","timestamp":1657604449,"status":10,"status_display":"Accepted","runtime":"22 ms","url":"/submissions/detail/744900981/","is_pending":"Not Pending","title":"Matchsticks to Square","memory":"9.9 MB","code":"class Solution {\n    bool dfs(vector<int> &sidesLength,const vector<int> &matches, int index, const int target) {\n        if (index == matches.size())\n            return sidesLength[0] == sidesLength[1] && sidesLength[1] == sidesLength[2] && sidesLength[2] == sidesLength[3];\n        for (int i = 0; i < 4; ++i) {\n            if (sidesLength[i] + matches[index] > target) // first\n                continue;\n            int j = i;\n            while (--j >= 0) // third\n                if (sidesLength[i] == sidesLength[j]) \n                    break;\n            if (j != -1) continue;\n            sidesLength[i] += matches[index];\n            if (dfs(sidesLength, matches, index + 1, target))\n                return true;\n            sidesLength[i] -= matches[index];\n        }\n        return false;\n    }\npublic:\n    bool makesquare(vector<int>& nums) {\n        if (nums.size() < 4) return false;\n        int sum = 0;\n        for (const int val: nums) {\n            sum += val;\n        }\n        if (sum % 4 != 0) return false;\n        sort(nums.begin(), nums.end(), [](const int &l, const int &r){return l > r;}); // second\n        vector<int> sidesLength(4, 0);\n        return dfs(sidesLength, nums, 0, sum / 4);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"matchsticks-to-square","has_notes":false,"flag_type":1}