{"id":799348187,"lang":"cpp","lang_name":"C++","time":"1 year, 3 months","timestamp":1663130563,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/799348187/","is_pending":"Not Pending","title":"Pseudo-Palindromic Paths in a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    int res=0;\n    \npublic:\n    \n    void postorder(TreeNode* root,unordered_map<int,int>&umap)\n    {\n        if(!root)\n        {\n            int count =0;\n            for(auto i:umap)\n            {\n                if(i.second%2==1)\n                    count++;\n            }\n            if(count<=1)\n                res++;\n            return;\n        }\n        umap[root->val]++;\n        postorder(root->left,umap);\n        postorder(root->right,umap);\n    }\n    \n    int pseudoPalindromicPaths (TreeNode* root) {\n        unordered_map<int,int>umap;\n        postorder(root,umap);\n        return res-1;\n    }\n};","compare_result":"11111000000001000000010000010000010000000000000000000000","title_slug":"pseudo-palindromic-paths-in-a-binary-tree","has_notes":false,"flag_type":1}