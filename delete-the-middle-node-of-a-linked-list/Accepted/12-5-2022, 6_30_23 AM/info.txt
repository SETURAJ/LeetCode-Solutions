{"id":854982065,"lang":"cpp","lang_name":"C++","time":"1 year, 1 month","timestamp":1670239823,"status":10,"status_display":"Accepted","runtime":"2374 ms","url":"/submissions/detail/854982065/","is_pending":"Not Pending","title":"Delete the Middle Node of a Linked List","memory":"294.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* deleteMiddle(ListNode* head) {\n        ListNode* slow=head;\n        ListNode* fast=head;\n        while(fast!=NULL && fast->next!=NULL)\n        {\n            slow=slow->next;\n            fast=fast->next->next;\n        }\n        ListNode* node=head;\n        if(node->next==NULL)\n            return NULL;\n        while(node->next!=slow && node->next!=NULL)\n        {\n            node=node->next;\n        }\n        node->next=node->next->next;\n      \n        return head;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"delete-the-middle-node-of-a-linked-list","has_notes":false,"flag_type":1}