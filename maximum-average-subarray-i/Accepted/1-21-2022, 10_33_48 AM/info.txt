{"id":624684482,"lang":"cpp","lang_name":"C++","time":"1 year, 11 months","timestamp":1642779228,"status":10,"status_display":"Accepted","runtime":"280 ms","url":"/submissions/detail/624684482/","is_pending":"Not Pending","title":"Maximum Average Subarray I","memory":"109.6 MB","code":"class Solution {\npublic:\n    double findMaxAverage(vector<int>& nums, int k) {\n        int n=nums.size();\n        double maxsum=0;\n        for(int i=0;i<k;i++)\n        {\n            maxsum+=nums[i];\n        }\n        if(k==n)\n            return maxsum/k;\n        \n        double sum=maxsum;\n        for(int i=k;i<n;i++)\n        {\n            \n            sum-=nums[i-k];\n            sum+=nums[i];\n            maxsum=max(maxsum,sum);\n        }\n        return maxsum/k;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-average-subarray-i","has_notes":false,"flag_type":1}