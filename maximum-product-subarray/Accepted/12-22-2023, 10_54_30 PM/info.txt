{"id":1126299883,"lang":"cpp","lang_name":"C++","time":"2 weeks, 1 day","timestamp":1703303670,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1126299883/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"14.3 MB","code":"class Solution {\npublic:\n    \n    int maxProduct(vector<int>& nums) {\n        int res = INT_MIN;\n        for(int i=0;i<nums.size();i++)\n            res = max(res,nums[i]);\n        int currmin = 1;\n        int currmax = 1;\n        for(int i=0;i<nums.size();i++)\n        {\n            if(nums[i]==0)\n            {\n                currmin=1;\n                currmax=1;\n                continue;\n            }\n            int temp = currmax*nums[i];\n            currmax = max(temp,max(currmin*nums[i],nums[i]));\n            currmin = min(temp,min(nums[i]*currmin,nums[i]));\n            res = max(res,currmax);\n        }\n        return res;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-subarray","has_notes":false,"flag_type":1}