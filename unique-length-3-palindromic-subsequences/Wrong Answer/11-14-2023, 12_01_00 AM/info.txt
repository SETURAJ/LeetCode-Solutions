{"id":1098397821,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1699938060,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1098397821/","is_pending":"Not Pending","title":"Unique Length-3 Palindromic Subsequences","memory":"N/A","code":"class Solution {\npublic:\n    int countPalindromicSubsequence(string s) {\n        vector<int>first(26,INT_MAX);\n        vector<int>last(26);\n        for(int i=0;i<s.length();i++)\n        {\n            first[s[i]-'a'] = min(first[s[i]-'a'],i);\n            last[s[i]-'a']=i;\n        }\n        \n        int res = 0;\n        for(int i=0;i<s.length();i++)\n        {\n            if(last[s[i]-'a']>first[s[i]-'a'])\n            {\n                unordered_set<char> umap;\n                int f = first[s[i]-'a']+1;\n                for(int i=f;i<last[s[i]-'a'];i++)\n                    umap.insert(s[i]);\n                res += umap.size();\n            }\n        }\n        return res;\n            \n    }\n};","compare_result":"1110101110000100000000000000000000000000000000000000000000000000000000","title_slug":"unique-length-3-palindromic-subsequences","has_notes":false,"flag_type":1}