{"id":815789843,"lang":"cpp","lang_name":"C++","time":"1 year, 3 months","timestamp":1664979756,"status":10,"status_display":"Accepted","runtime":"45 ms","url":"/submissions/detail/815789843/","is_pending":"Not Pending","title":"Add One Row to Tree","memory":"24.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n\n    TreeNode* solve(TreeNode* root,int val,int depth,int curr)\n    {\n        if(root==NULL)\n            return NULL;\n        if(curr==depth-1)\n        {\n            TreeNode* l=new TreeNode(val);\n            TreeNode* r=new TreeNode(val);\n            l->left=root->left;\n            r->right=root->right;\n            root->left=l;\n            root->right=r;\n            return root;\n        }\n        else\n        {\n            solve(root->left,val,depth,curr+1);\n            solve(root->right,val,depth,curr+1);\n            return root;\n        }\n    }\n\n    TreeNode* addOneRow(TreeNode* root, int val, int depth) {\n        if(depth==1)\n        {\n            TreeNode* newnode=new TreeNode(val);\n            newnode->left=root;\n            return newnode;\n        }\n        return solve(root,val,depth,1);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"add-one-row-to-tree","has_notes":false,"flag_type":1}