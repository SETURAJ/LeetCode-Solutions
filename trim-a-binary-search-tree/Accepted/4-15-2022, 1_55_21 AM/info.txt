{"id":680681930,"lang":"cpp","lang_name":"C++","time":"1 year, 8 months","timestamp":1650002121,"status":10,"status_display":"Accepted","runtime":"21 ms","url":"/submissions/detail/680681930/","is_pending":"Not Pending","title":"Trim a Binary Search Tree","memory":"23.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* trimBST(TreeNode* root, int low, int high) {\n        if(!root)\n            return NULL;\n        if(root->val<low)\n            return trimBST(root->right,low,high);\n        else if(root->val>high)\n            return trimBST(root->left,low,high);\n        root->left=trimBST(root->left,low,high);\n        root->right=trimBST(root->right,low,high);\n        \n        return root;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"trim-a-binary-search-tree","has_notes":false,"flag_type":1}