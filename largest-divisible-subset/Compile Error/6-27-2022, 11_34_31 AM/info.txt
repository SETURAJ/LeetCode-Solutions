{"id":732665492,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1656344071,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/732665492/","is_pending":"Not Pending","title":"Largest Divisible Subset","memory":"N/A","code":"class Solution {\npublic:\n    vector<int> largestDivisibleSubset(vector<int>& nums) {\n        sort(nums.begin(),nums.end());\n        int n=nums.size();\n        vector<int>dp(n,1),child(n,-1);\n        int imax=0;\n        for(int i=1;i<n;i++)\n        {\n            for(int j=0;j<i;j++)\n            {\n                if(nums[i]%nums[j]==0)\n                {\n                    if(1+dp[j]>dp[i])\n                    {\n                        dp[i]=1+dp[j];\n                    child[i]=j;\n                    }\n                // }\n            }\n            if(dp[i]>dp[imax])\n                imax=i;\n        }\n        vector<int>ans;\n        while(imax!=-1)\n        {\n            ans.push_back(nums[imax]);\n            imax=child[imax];\n        }\n        return ans;\n    }\n};","compare_result":null,"title_slug":"largest-divisible-subset","has_notes":false,"flag_type":1}