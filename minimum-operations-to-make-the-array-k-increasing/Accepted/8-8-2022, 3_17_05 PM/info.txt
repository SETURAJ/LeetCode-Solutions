{"id":768696466,"lang":"cpp","lang_name":"C++","time":"1 year, 5 months","timestamp":1659986225,"status":10,"status_display":"Accepted","runtime":"475 ms","url":"/submissions/detail/768696466/","is_pending":"Not Pending","title":"Minimum Operations to Make the Array K-Increasing","memory":"135.9 MB","code":"class Solution {\npublic:\n    \n    int lis(vector<int>&nums)\n    {\n        vector<int>sub;\n        for(auto n:nums)\n        {\n            if(sub.empty() || sub[sub.size()-1]<=n)\n                sub.push_back(n);\n            else\n            {\n                auto it=upper_bound(sub.begin(),sub.end(),n);\n                *it=n;\n            }\n        }\n        return sub.size();\n    }\n    \n    int kIncreasing(vector<int>& arr, int k) {\n        int n=arr.size();\n        int ans=0;\n        for(int i=0;i<k;++i)\n        {\n            vector<int>temp;\n            for(int j=i;j<n;j+=k)\n                temp.push_back(arr[j]);\n            ans+=temp.size()-lis(temp);\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-operations-to-make-the-array-k-increasing","has_notes":false,"flag_type":1}