{"id":720644199,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1655058260,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/720644199/","is_pending":"Not Pending","title":"Sum of Subarray Minimums","memory":"N/A","code":"class Solution {\npublic:\n    int sumSubarrayMins(vector<int>& arr) {\n        stack<pair<int,int>>s_nle,s_ple;\n        vector<int>left(arr.size()),right(arr.size());\n        for(int i=0;i<arr.size();i++)\n            left[i]=i+1;\n        for(int i=0;i<arr.size();i++)\n            right[i]=arr.size()-i;\n        \n        for(int i=0;i<arr.size();i++)\n        {\n            while(!s_ple.empty() && s_ple.top().first>arr[i])\n                s_ple.pop();\n            left[i]=s_ple.empty()?i+1:i-s_ple.top().second;\n            s_ple.push({arr[i],i});\n            \n            while(!s_nle.empty() && s_nle.top().first>arr[i])\n            {\n                auto x=s_nle.top();\n                s_nle.pop();\n                right[x.second]=i-x.second;\n            }\n            s_nle.push({arr[i],i});\n        }\n        long long int ans=0, mod=1e9+7;\n        for(int i=0;i<arr.size();i++)\n            ans+=(arr[i]*left[i]*right[i])%mod;\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111100000000000000","title_slug":"sum-of-subarray-minimums","has_notes":false,"flag_type":1}