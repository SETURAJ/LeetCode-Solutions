{"id":1128446149,"lang":"cpp","lang_name":"C++","time":"1 week, 5 days","timestamp":1703543776,"status":10,"status_display":"Accepted","runtime":"561 ms","url":"/submissions/detail/1128446149/","is_pending":"Not Pending","title":"Best Time to Buy and Sell Stock III","memory":"207.7 MB","code":"class Solution {\npublic:\n    \n   /* int findprofit(vector<int>&prices,int ind,int buy,int cap,int n)\n    {\n        if(ind==n || cap==0)\n            return 0;\n        if(buy==1)\n        {\n            return max(-prices[ind]+findprofit(prices,ind+1,0,cap,n) , 0 + findprofit(prices,ind+1,1,cap,n));\n        }\n        return max(prices[ind]+findprofit(prices,ind+1,1,cap-1,n) , 0 + findprofit(prices,ind+1,0,cap,n));\n    }\n    */\n    int maxProfit(vector<int>& prices) {\n        int n = prices.size();\n        vector<vector<vector<int>>>dp(n+1,vector<vector<int>>(2,vector<int>(3,0)));\n        for(int ind = n-1;ind>=0;ind--)\n        {\n            for(int buy=0;buy<=1;buy++)\n            {\n                for(int cap=1;cap<=2;cap++)\n                {\n                    if(buy==1)\n                        dp[ind][buy][cap] = max(-prices[ind]+dp[ind+1][0][cap] , 0 + dp[ind+1][1][cap]);\n                    else\n                        dp[ind][buy][cap] = max(prices[ind]+dp[ind+1][1][cap-1] , 0 + dp[ind+1][0][cap]);\n                }\n            }\n        }\n        \n        return dp[0][1][2];\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"best-time-to-buy-and-sell-stock-iii","has_notes":false,"flag_type":1}