{"id":666879538,"lang":"cpp","lang_name":"C++","time":"1 year, 9 months","timestamp":1648189430,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/666879538/","is_pending":"Not Pending","title":"Two City Scheduling","memory":"7.9 MB","code":"class Solution {\npublic:\n    \n    static bool comp(const pair<int,pair<int,int>> &p1,const pair<int,pair<int,int>> &p2)\n    {\n        return p1.first<p2.first;\n    }\n    int twoCitySchedCost(vector<vector<int>>& costs) {\n        int n=costs.size();\n        int res=0;\n        \n        vector<pair<int,pair<int,int>>>v;\n        for(int i=0;i<n;i++)\n        {\n            v.push_back({costs[i][0]-costs[i][1],make_pair(costs[i][0],costs[i][1])});\n        }\n        sort(v.begin(),v.end(),comp);\n        \n        for(int i=0;i<n/2;i++)\n            res += v[i].second.first;\n        \n        for(int i=n/2;i<n;i++)\n            res += v[i].second.second; \n        \n        return res;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"two-city-scheduling","has_notes":false,"flag_type":1}