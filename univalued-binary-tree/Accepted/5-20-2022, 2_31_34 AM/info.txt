{"id":703266295,"lang":"cpp","lang_name":"C++","time":"1 year, 7 months","timestamp":1653028294,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/703266295/","is_pending":"Not Pending","title":"Univalued Binary Tree","memory":"10.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    set<int>s;\n    \n    void dfs(TreeNode* root)\n    {\n        if(root==NULL)\n            return;\n        s.insert(root->val);\n        if(s.size()>1)\n            return;\n        dfs(root->left);\n        dfs(root->right);\n    }\n    \n    bool isUnivalTree(TreeNode* root) {\n        dfs(root);\n        return s.size()<=1 ? true:false;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"univalued-binary-tree","has_notes":false,"flag_type":1}