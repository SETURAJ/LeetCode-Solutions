{"id":703268863,"lang":"cpp","lang_name":"C++","time":"1 year, 7 months","timestamp":1653028571,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/703268863/","is_pending":"Not Pending","title":"Univalued Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    void dfs(TreeNode* root,int &cur)\n    {\n        if(root==NULL)\n            return;\n        if(cur!=root->val)\n        {\n            cur=root->val;\n            return;\n        }\n        dfs(root->left,cur);\n        dfs(root->right,cur);\n    }\n    \n    bool isUnivalTree(TreeNode* root) {\n        int cur=root->val;\n        dfs(root,cur);\n        return cur==root->val?true:false;\n    }\n};","compare_result":"101111111110101100100000111110110100011111110101110001111001100101111101","title_slug":"univalued-binary-tree","has_notes":false,"flag_type":1}