{"id":661313839,"lang":"cpp","lang_name":"C++","time":"1 year, 9 months","timestamp":1647453014,"status":10,"status_display":"Accepted","runtime":"22 ms","url":"/submissions/detail/661313839/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"12.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    TreeNode* prev=NULL;\npublic:\n    void flatten(TreeNode* root) {\n        if(root==NULL)\n            return;\n        flatten(root->right);\n        flatten(root->left);\n        root->right=prev;\n        root->left=NULL;\n        prev=root;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flatten-binary-tree-to-linked-list","has_notes":false,"flag_type":1}