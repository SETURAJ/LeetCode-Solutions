{"id":721135205,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1655114649,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/721135205/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"7.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    \n    \n    ListNode *detectCycle(ListNode *head) {\n       if(!head) return NULL;\n        \n        ListNode* slow=head;\n        ListNode* fast=head;\n        ListNode* entry=head;\n        while(fast && fast->next)\n        {\n            slow=slow->next;\n            fast=fast->next->next;\n            if(slow==fast)\n            {\n                while(slow!=entry)\n                {\n                    slow=slow->next;\n                    entry=entry->next;\n                }\n                return slow;\n            }\n        }\n        return NULL;\n    }\n};","compare_result":"1111111111111111","title_slug":"linked-list-cycle-ii","has_notes":false,"flag_type":1}