{"id":700591401,"lang":"cpp","lang_name":"C++","time":"1 year, 7 months","timestamp":1652692304,"status":10,"status_display":"Accepted","runtime":"192 ms","url":"/submissions/detail/700591401/","is_pending":"Not Pending","title":"Range Sum of BST","memory":"64.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int res=0;\n    \n    \n    \n    int rangeSumBST(TreeNode* root, int low, int high) {\n        if(root==NULL)\n            return 0;\n        if(root->val>=low && root->val<=high)\n            return root->val+rangeSumBST(root->left,low,high)+        rangeSumBST(root->right,low,high);                                \n        if(root->val<low)\n            return rangeSumBST(root->right,low,high);\n        return rangeSumBST(root->left,low,high);\n    }\n};","compare_result":"11111111111111111111111111111111111111111","title_slug":"range-sum-of-bst","has_notes":false,"flag_type":1}