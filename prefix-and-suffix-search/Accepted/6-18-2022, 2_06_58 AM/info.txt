{"id":724919822,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1655532418,"status":10,"status_display":"Accepted","runtime":"1076 ms","url":"/submissions/detail/724919822/","is_pending":"Not Pending","title":"Prefix and Suffix Search","memory":"150.1 MB","code":"class WordFilter {\npublic:\n    unordered_map<string,int>umap;\n    WordFilter(vector<string>& words) {\n        int n=words.size();\n        for(int i=0;i<n;i++)\n        {\n            string word=words[i];\n            int wordsize=word.size();\n            for(int j=1;j<=wordsize;j++)\n            {\n                string p=word.substr(0,j);\n                for(int k=0;k<wordsize;k++)\n                {\n                    string s=word.substr(k,wordsize);\n                    umap[p+\"|\"+s]=i+1;\n                }\n            }\n        }\n    }\n    \n    int f(string prefix, string suffix) {\n        string s=prefix+\"|\"+suffix;\n        return umap[s]-1;\n    }\n};\n\n/**\n * Your WordFilter object will be instantiated and called as such:\n * WordFilter* obj = new WordFilter(words);\n * int param_1 = obj->f(prefix,suffix);\n */","compare_result":"1111111111111","title_slug":"prefix-and-suffix-search","has_notes":false,"flag_type":1}