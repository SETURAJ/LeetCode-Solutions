{"id":726643330,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1655720488,"status":10,"status_display":"Accepted","runtime":"18 ms","url":"/submissions/detail/726643330/","is_pending":"Not Pending","title":"Minimum Falling Path Sum","memory":"10.3 MB","code":"class Solution {\npublic:\n    int minFallingPathSum(vector<vector<int>>& matrix) {\n        int m=matrix.size();\n        int n=matrix[0].size();\n        if(m==1 && n==1)\n            return matrix[0][0];\n        if(m==1)\n        {\n            int res=INT_MAX;\n            for(int i=0;i<n;i++)\n                res=min(matrix[0][i],res);\n            return res;\n        }\n        vector<vector<int>>dp(m,vector<int>(n,0));\n        for(int i=0;i<n;i++)\n            dp[0][i]=matrix[0][i];\n        for(int i=1;i<m;i++)\n        {\n            for(int j=0;j<n;j++)\n            {\n                int down=matrix[i][j]+dp[i-1][j];\n                int leftdiag=INT_MAX,rightdiag=INT_MAX;\n                if(j-1>=0)\n                {\n                    leftdiag=matrix[i][j]+dp[i-1][j-1];\n                }\n                if(j+1<n)\n                    rightdiag=matrix[i][j]+dp[i-1][j+1];\n                dp[i][j]=min(down,min(leftdiag,rightdiag));\n            }\n        }\n        int res=INT_MAX;\n        for(int i=0;i<n;i++)\n            res=min(dp[m-1][i],res);\n        return res;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"minimum-falling-path-sum","has_notes":false,"flag_type":1}