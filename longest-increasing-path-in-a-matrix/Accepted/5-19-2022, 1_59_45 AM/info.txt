{"id":702579127,"lang":"cpp","lang_name":"C++","time":"1 year, 7 months","timestamp":1652939985,"status":10,"status_display":"Accepted","runtime":"53 ms","url":"/submissions/detail/702579127/","is_pending":"Not Pending","title":"Longest Increasing Path in a Matrix","memory":"14.9 MB","code":"class Solution {\npublic:\n    int dp[200][200]{};\n    int maxPath,row,col;\n    int longestIncreasingPath(vector<vector<int>>& matrix) {\n        maxPath=0;\n        row=matrix.size();\n        col=matrix[0].size();\n        for(int i=0;i<row;i++)\n        {\n            for(int j=0;j<col;j++)\n                maxPath=max(maxPath,solve(matrix,i,j,-1));\n            \n        }\n        return maxPath;\n    }\n    int solve(vector<vector<int>>& mat,int i,int j,int prev)\n    {\n        if(i<0 || j<0 || i>=row || j>=col|| mat[i][j]<=prev)\n            return 0;\n        if(dp[i][j])\n            return dp[i][j];\n        return dp[i][j]=1+max({ solve(mat,i+1,j,mat[i][j]),\n                                solve(mat,i,j+1,mat[i][j]),\n                                solve(mat,i-1,j,mat[i][j]),\n                                solve(mat,i,j-1,mat[i][j]),\n                              });\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-path-in-a-matrix","has_notes":false,"flag_type":1}