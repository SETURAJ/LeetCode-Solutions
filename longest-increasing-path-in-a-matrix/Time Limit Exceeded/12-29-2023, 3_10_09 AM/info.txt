{"id":1131222449,"lang":"cpp","lang_name":"C++","time":"1 week, 2 days","timestamp":1703837409,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1131222449/","is_pending":"Not Pending","title":"Longest Increasing Path in a Matrix","memory":"N/A","code":"class Solution {\npublic:\n    \n    int findpath(vector<vector<int>>&matrix,int i,int j,int n,int m, int val)\n    {\n        if(i<0 || i>=n || j<0 || j>=m || matrix[i][j] <= val)\n            return 0;\n        return 1 + max({findpath(matrix,i+1,j,n,m,matrix[i][j]),\n                        findpath(matrix,i,j+1,n,m,matrix[i][j]),\n                        findpath(matrix,i-1,j,n,m,matrix[i][j]),\n                        findpath(matrix,i,j-1,n,m,matrix[i][j])\n                        });\n    }\n    \n    \n    int longestIncreasingPath(vector<vector<int>>& matrix) {\n        int n = matrix.size();\n        int m = matrix[0].size();\n        int res = INT_MIN;\n        for(int i=0;i<n;i++)\n        {\n            for(int j=0;j<m;j++)\n            {\n                int size = findpath(matrix,i,j,n,m,-1);\n                res = max(res,size);\n            }\n        }\n        return res;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000","title_slug":"longest-increasing-path-in-a-matrix","has_notes":false,"flag_type":1}