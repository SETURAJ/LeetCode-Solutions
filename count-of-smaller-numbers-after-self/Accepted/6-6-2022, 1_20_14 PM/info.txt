{"id":715879878,"lang":"cpp","lang_name":"C++","time":"1 year, 7 months","timestamp":1654536014,"status":10,"status_display":"Accepted","runtime":"1297 ms","url":"/submissions/detail/715879878/","is_pending":"Not Pending","title":"Count of Smaller Numbers After Self","memory":"83.7 MB","code":"class Solution {\npublic:\n    vector<int>sol;\n    void merge(vector<pair<int,int>>&vec,int left,int mid,int right)\n    {\n        int i=left,j=mid+1;\n        while(i<=mid && j<=right)\n        {\n            if(vec[i].first<=vec[j].first)\n            {\n                sol[vec[i].second]+=(j-mid-1);\n                i++;\n            }\n            else\n                j++;\n        }\n        while(i<=mid)\n        {\n            sol[vec[i].second]+=(j-mid-1);\n            i++;\n        }\n        sort(vec.begin()+left,vec.begin()+right+1);\n    }\n    \n    void mergesort(vector<pair<int,int>>&vec,int left,int right)\n    {\n        if(left>=right)\n            return;\n        int mid=left+(right-left)/2;\n        mergesort(vec,left,mid);\n        mergesort(vec,mid+1,right);\n        merge(vec,left,mid,right);\n    }\n    vector<int> countSmaller(vector<int>& nums) {\n        int n=nums.size();\n        sol.resize(n,0);\n        vector<pair<int,int>>idx;\n        for(int i=0;i<n;i++)\n            idx.push_back({nums[i],i});\n        mergesort(idx,0,n-1);\n        return sol;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-of-smaller-numbers-after-self","has_notes":false,"flag_type":1}