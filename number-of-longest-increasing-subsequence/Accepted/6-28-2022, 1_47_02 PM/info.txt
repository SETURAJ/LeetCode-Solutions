{"id":733629202,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1656438422,"status":10,"status_display":"Accepted","runtime":"353 ms","url":"/submissions/detail/733629202/","is_pending":"Not Pending","title":"Number of Longest Increasing Subsequence","memory":"13.3 MB","code":"class Solution {\npublic:\n    int findNumberOfLIS(vector<int>& nums) {\n        int n=nums.size();\n        vector<int>lis(n,1);\n        vector<int>cnt(n,1);\n        \n        for(int i=0;i<n;i++)\n        {\n            for(int j=0;j<i;j++)\n            {\n                if(nums[i]<=nums[j])\n                    continue;\n                if(lis[j]+1>lis[i])\n                {\n                    lis[i]=lis[j]+1;\n                    cnt[i]=cnt[j];\n                }\n                else if(lis[j]+1==lis[i])\n                    cnt[i]+=cnt[j];\n            }\n        }\n        int len=0;\n        for(auto n:lis)\n            len=max(len,n);\n        int count=0;\n        for(int i=0;i<n;i++)\n        {\n            if(lis[i]==len)\n                count+=cnt[i];\n        }\n        return count;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-longest-increasing-subsequence","has_notes":false,"flag_type":1}