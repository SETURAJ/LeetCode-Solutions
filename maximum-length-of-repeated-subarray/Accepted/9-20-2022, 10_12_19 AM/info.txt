{"id":804505912,"lang":"cpp","lang_name":"C++","time":"1 year, 3 months","timestamp":1663683139,"status":10,"status_display":"Accepted","runtime":"411 ms","url":"/submissions/detail/804505912/","is_pending":"Not Pending","title":"Maximum Length of Repeated Subarray","memory":"109.3 MB","code":"class Solution {\npublic:\n    int findLength(vector<int>& nums1, vector<int>& nums2) {\n        int m=nums1.size();\n        int n=nums2.size();\n        vector<vector<int>>dp(m+1,vector<int>(n+1,0));\n        int res=0;\n        for(int i=1;i<=m;i++)\n        {\n            for(int j=1;j<=n;j++)\n            {\n                if(nums1[i-1]==nums2[j-1])\n                    dp[i][j]=dp[i-1][j-1]+1;\n                res=max(res,dp[i][j]);\n            }\n        }\n        return res;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-length-of-repeated-subarray","has_notes":false,"flag_type":1}