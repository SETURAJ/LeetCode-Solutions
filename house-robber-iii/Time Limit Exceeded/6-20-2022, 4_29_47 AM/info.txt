{"id":726585486,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1655713787,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/726585486/","is_pending":"Not Pending","title":"House Robber III","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int rob(TreeNode* root,bool canrob=true) \n    {\n        if(!root)\n            return 0;\n        int dontrob=rob(root->left,true)+rob(root->right,true);\n        int robbed=canrob? root->val+rob(root->left,false)+rob(root->right,false):-1;\n        return max(dontrob,robbed);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100","title_slug":"house-robber-iii","has_notes":false,"flag_type":1}