{"id":726611814,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1655716883,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/726611814/","is_pending":"Not Pending","title":"House Robber III","memory":"22.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    pair<int,int>find(TreeNode* node)\n    {\n        if(!node)\n            return make_pair(0,0);\n        auto l=find(node->left);\n        auto r=find(node->right);\n        int f2=l.second+r.second;\n        int f1=max(f2,l.first+r.first+node->val);\n        return make_pair(f2,f1);\n    }\n    \n    int rob(TreeNode* root) \n    {\n        if(!root)\n            return 0;\n        return find(root).second;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"house-robber-iii","has_notes":false,"flag_type":1}