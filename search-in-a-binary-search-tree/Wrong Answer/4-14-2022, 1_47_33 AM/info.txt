{"id":680056727,"lang":"cpp","lang_name":"C++","time":"1 year, 8 months","timestamp":1649915253,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/680056727/","is_pending":"Not Pending","title":"Search in a Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* searchBST(TreeNode* root, int val) {\n        if(root==NULL)\n            return NULL;\n        TreeNode* ans=new TreeNode();\n        if(val>root->val)\n            ans=searchBST(root->right,val);\n        else if(val<root->val)\n            ans=searchBST(root->left,val);\n        else \n            ans=root;\n        return root;\n    }\n};","compare_result":"000000100000000000000000000000000000","title_slug":"search-in-a-binary-search-tree","has_notes":false,"flag_type":1}