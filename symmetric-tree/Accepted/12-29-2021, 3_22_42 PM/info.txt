{"id":609339320,"lang":"cpp","lang_name":"C++","time":"2Â years","timestamp":1640809362,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/609339320/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"16.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    bool check(TreeNode* p,TreeNode* q)\n    {\n        if(p==NULL || q==NULL)\n            return p==q;\n        if(p->val!=q->val)\n            return false;\n        if(check(p->left,q->right)&&check(p->right,q->left))\n            return true;\n        else\n            return false;\n        return true;\n    }\n    \n    bool isSymmetric(TreeNode* root) {\n        if(!root->left && !root->right)\n            return true;\n        if(!root->left || !root->right)\n            return false;\n        return check(root,root);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false,"flag_type":1}