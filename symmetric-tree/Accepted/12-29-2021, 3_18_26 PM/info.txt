{"id":609337198,"lang":"cpp","lang_name":"C++","time":"2Â years","timestamp":1640809106,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/609337198/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"16.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    bool check(TreeNode* l,TreeNode* r)\n    {\n        if(!l && !r)\n            return true;\n        if(!l || !r)\n            return false;\n        if(l->val!=r->val)\n            return false;\n        if(!check(l->left,r->right))\n            return false;\n        if(!check(l->right,r->left))\n            return false;\n        \n        return true;\n    }\n    \n    bool isSymmetric(TreeNode* root) {\n        if(!root->left && !root->right)\n            return true;\n        if(!root->left || !root->right)\n            return false;\n        return check(root->left,root->right);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false,"flag_type":1}