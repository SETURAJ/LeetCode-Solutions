{"id":914562817,"lang":"cpp","lang_name":"C++","time":"9 months, 4 weeks","timestamp":1678732152,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/914562817/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"16.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    bool check(TreeNode* p,TreeNode* q)\n    {\n        if(p==NULL && q==NULL)\n            return true;\n        if(p==NULL || q==NULL)\n            return false;\n        if(p->val !=q->val)\n            return false;\n        return check(p->left,q->right) && check(p->right,q->left);\n        \n    }\n    \n    bool isSymmetric(TreeNode* root) {\n        if(root->left==NULL && root->right==NULL)\n            return true;\n        return check(root->left,root->right);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false,"flag_type":1}