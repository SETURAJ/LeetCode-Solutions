{"id":598988938,"lang":"cpp","lang_name":"C++","time":"2Â years","timestamp":1638991036,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/598988938/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"14.8 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {\n        ListNode *head=new ListNode();\n        ListNode *temp=head;\n        if(list1!=NULL && list2==NULL)\n            return list1;\n        if(list1==NULL && list2!=NULL)\n            return list2;\n        if(list1==NULL && list2==NULL)\n            return NULL;\n        while(list1!=NULL && list2!=NULL)\n        {\n            if(list1->val<list2->val)\n            {\n                temp->next=list1;\n                list1=list1->next;\n            }\n            else\n            {\n                temp->next=list2;\n                list2=list2->next;\n            }\n            temp=temp->next;\n        }\n        if(list1!=NULL)\n        {\n            temp->next=list1;\n        }\n        if(list2!=NULL)\n        {\n            temp->next=list2;\n        }\n        return head->next;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists","has_notes":false,"flag_type":1}