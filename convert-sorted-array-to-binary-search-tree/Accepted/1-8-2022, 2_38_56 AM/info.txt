{"id":615396954,"lang":"cpp","lang_name":"C++","time":"1 year, 12 months","timestamp":1641627536,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/615396954/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"21.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    TreeNode* builtBst(vector<int>&nums,int start,int end)\n    {\n        if(start>end)\n            return NULL;\n        int mid=(start+end)/2;\n        TreeNode* new_node=new TreeNode(nums[mid]);\n        new_node->left=builtBst(nums,start,mid-1);\n        new_node->right=builtBst(nums,mid+1,end);\n        return new_node;\n        \n    }\n    \n    TreeNode* sortedArrayToBST(vector<int>& nums) {\n        return builtBst(nums,0,nums.size()-1);\n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree","has_notes":false,"flag_type":1}