{"id":720665203,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1655060177,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/720665203/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"7.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        ListNode *first=head;\n        ListNode *last=head;\n        while(first && last && last->next)\n        {\n            first=first->next;\n            last=last->next->next;\n            if(first==last)\n                return true;\n        }\n        return false;\n        \n    }\n};","compare_result":"111111111111111111111","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}