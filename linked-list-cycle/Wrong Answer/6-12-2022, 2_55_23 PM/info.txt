{"id":720664612,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1655060123,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/720664612/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        ListNode *first=head;\n        ListNode *last=head;\n        while(first && last && last->next)\n        {\n            first=first->next;\n            last=last->next;\n            if(first==last)\n                return true;\n        }\n        return false;\n        \n    }\n};","compare_result":"111111011101110110010","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}