{"id":713762240,"lang":"cpp","lang_name":"C++","time":"1 year, 7 months","timestamp":1654285920,"status":10,"status_display":"Accepted","runtime":"562 ms","url":"/submissions/detail/713762240/","is_pending":"Not Pending","title":"Range Sum Query 2D - Immutable","memory":"148.1 MB","code":"class NumMatrix {\npublic:\n    vector<vector<int>> sum;\n    NumMatrix(vector<vector<int>>& matrix) {\n        int m = matrix.size(), n = matrix[0].size();\n        sum = vector<vector<int>>(m + 1, vector<int>(n + 1)); // sum[i][j] is sum of all elements inside the rectangle [0,0,i,j]\n        for (int i = 1; i <= m; i++) {\n            for (int j = 1; j <= n; j++) {\n                sum[i][j] = sum[i - 1][j] + sum[i][j - 1] - sum[i - 1][j - 1] + matrix[i - 1][j - 1];\n            }\n        }\n    }\n    int sumRegion(int r1, int c1, int r2, int c2) {\n\t\t// Since our `sum` starts by 1 so we need to increase r1, c1, r2, c2 by 1\n        r1++; c1++; r2++; c2++; \n        return sum[r2][c2] - sum[r2][c1 - 1] - sum[r1 - 1][c2] + sum[r1 - 1][c1 - 1];\n    }\n};","compare_result":"111111111111111111111111","title_slug":"range-sum-query-2d-immutable","has_notes":false,"flag_type":1}