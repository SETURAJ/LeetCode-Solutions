{"id":700585013,"lang":"cpp","lang_name":"C++","time":"1 year, 7 months","timestamp":1652691364,"status":10,"status_display":"Accepted","runtime":"66 ms","url":"/submissions/detail/700585013/","is_pending":"Not Pending","title":"Two Sum IV - Input is a BST","memory":"36 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n      bool findTarget(TreeNode* root, int k) {\n        return dfs(root, root,  k);\n    }\n    \n    bool dfs(TreeNode* root,  TreeNode* cur, int k){\n        if(cur == NULL)return false;\n        return search(root, cur, k - cur->val) || dfs(root, cur->left, k) || dfs(root, cur->right, k);\n    }\n    \n    bool search(TreeNode* root, TreeNode *cur, int value){\n        if(root == NULL)return false;\n        return (root->val == value) && (root != cur) \n            || (root->val < value) && search(root->right, cur, value) \n                || (root->val > value) && search(root->left, cur, value);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"two-sum-iv-input-is-a-bst","has_notes":false,"flag_type":1}